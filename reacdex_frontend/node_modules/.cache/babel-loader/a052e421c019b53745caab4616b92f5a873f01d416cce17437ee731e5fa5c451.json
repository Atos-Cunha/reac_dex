{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\routes\\\\Types.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\n// === styled-components baseados nos seus componentes ===\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonEvoGrid = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin: 20px 0;\n`;\n_c = PokemonEvoGrid;\nconst EvolveCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  padding: 12px;\n  background: #f8f9fa;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n`;\n_c2 = EvolveCard;\nconst PokeImgEvo = styled.img`\n  width: 120px;\n  height: 120px;\n  object-fit: contain;\n`;\n\n// frame para tipos\n_c3 = PokeImgEvo;\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 6px;\n  margin-top: 8px;\n`;\n_c4 = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n`;\n\n// utilitário para src\n_c5 = PokemonImageType;\nconst imageIdForSrc = pokemon => {\n  var _pokemon$id;\n  return (_pokemon$id = pokemon.id) !== null && _pokemon$id !== void 0 ? _pokemon$id : pokemon.number;\n};\nfunction EvolutionsPage() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/evolutions\") // rota backend\n    .then(res => res.json()).then(data => setGroups(data)).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Evolu\\xE7\\xF5es por Grupo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [\"Grupo \", group.group]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), group.chain && /*#__PURE__*/_jsxDEV(PokemonEvoGrid, {\n        children: group.chain.map(ev => {\n          var _ev$id;\n          return /*#__PURE__*/_jsxDEV(EvolveCard, {\n            children: [/*#__PURE__*/_jsxDEV(PokeImgEvo, {\n              src: ev.image || `http://localhost:8000/home/${imageIdForSrc(ev)}/img`,\n              alt: ev.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n              children: (Array.isArray(ev.type) ? ev.type.slice(0, 2) : [ev.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n                src: `http://localhost:8000/types/${encodeURIComponent(type)}.png`,\n                alt: String(type)\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, (_ev$id = ev.id) !== null && _ev$id !== void 0 ? _ev$id : ev.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, group.group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(EvolutionsPage, \"UbUkkKKaTwVY7PWotTfxor2xXvY=\");\n_c6 = EvolutionsPage;\nexport default EvolutionsPage;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PokemonEvoGrid\");\n$RefreshReg$(_c2, \"EvolveCard\");\n$RefreshReg$(_c3, \"PokeImgEvo\");\n$RefreshReg$(_c4, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c5, \"PokemonImageType\");\n$RefreshReg$(_c6, \"EvolutionsPage\");","map":{"version":3,"names":["useEffect","useState","styled","jsxDEV","_jsxDEV","PokemonEvoGrid","div","_c","EvolveCard","_c2","PokeImgEvo","img","_c3","PokemonImageTypeFrame","_c4","PokemonImageType","_c5","imageIdForSrc","pokemon","_pokemon$id","id","number","EvolutionsPage","_s","groups","setGroups","fetch","then","res","json","data","catch","err","console","error","style","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","group","chain","ev","_ev$id","src","image","alt","name","Array","isArray","type","slice","filter","Boolean","encodeURIComponent","String","_c6","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/routes/Types.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// === styled-components baseados nos seus componentes ===\r\nconst PokemonEvoGrid = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst EvolveCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 12px;\r\n  padding: 12px;\r\n  background: #f8f9fa;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  object-fit: contain;\r\n`;\r\n\r\n// frame para tipos\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 6px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  object-fit: contain;\r\n`;\r\n\r\n// utilitário para src\r\nconst imageIdForSrc = (pokemon) => {\r\n  return pokemon.id ?? pokemon.number;\r\n};\r\n\r\nfunction EvolutionsPage() {\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/evolutions\") // rota backend\r\n      .then((res) => res.json())\r\n      .then((data) => setGroups(data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1 style={{ textAlign: \"center\" }}>Evoluções por Grupo</h1>\r\n\r\n      {groups.map((group) => (\r\n        <div key={group.group}>\r\n          <h2 style={{ textAlign: \"center\" }}>Grupo {group.group}</h2>\r\n\r\n          {group.chain && (\r\n            <PokemonEvoGrid>\r\n              {group.chain.map((ev) => (\r\n                <EvolveCard key={ev.id ?? ev.number}>\r\n                  <PokeImgEvo\r\n                    src={\r\n                      ev.image ||\r\n                      `http://localhost:8000/home/${imageIdForSrc(ev)}/img`\r\n                    }\r\n                    alt={ev.name}\r\n                  />\r\n\r\n                  {/* tipos do Pokémon */}\r\n                  <PokemonImageTypeFrame>\r\n                    {(Array.isArray(ev.type) ? ev.type.slice(0, 2) : [ev.type])\r\n                      .filter(Boolean)\r\n                      .map((type) => (\r\n                        <PokemonImageType\r\n                          key={type}\r\n                          src={`http://localhost:8000/types/${encodeURIComponent(type)}.png`}\r\n                          alt={String(type)}\r\n                        />\r\n                      ))}\r\n                  </PokemonImageTypeFrame>\r\n                </EvolveCard>\r\n              ))}\r\n            </PokemonEvoGrid>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EvolutionsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
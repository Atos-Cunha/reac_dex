{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\routes\\\\Evolves.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FramePokeEvoGrid = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin: 20px 0;\n`;\n_c = FramePokeEvoGrid;\nconst EvolveCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 12px;\n  padding: 12px;\n  background: #f8f9fa;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n`;\n_c2 = EvolveCard;\nconst PokeImgEvo = styled.img`\n  width: 120px;\n  height: 120px;\n  object-fit: contain;\n`;\n_c3 = PokeImgEvo;\nfunction Evolves() {\n  _s();\n  const [evolves, setEvolves] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/evolves\").then(res => res.json()).then(data => setEvolves(data || [])).catch(err => {\n      console.error(\"Erro ao buscar evoluções:\", err);\n      setEvolves([]);\n    }).finally(() => setLoading(false));\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  if (!Array.isArray(evolves) || evolves.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Nenhuma evolu\\xE7\\xE3o encontrada.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 63\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Evolu\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), evolves.map(group => {\n      var _group$chain;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [\"Grupo \", group.group]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FramePokeEvoGrid, {\n          children: (_group$chain = group.chain) === null || _group$chain === void 0 ? void 0 : _group$chain.map(ev => {\n            var _ev$id;\n            return /*#__PURE__*/_jsxDEV(EvolveCard, {\n              children: /*#__PURE__*/_jsxDEV(PokeImgEvo, {\n                src: ev.image || `http://localhost:8000/home/${ev.number}/img`,\n                alt: ev.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, (_ev$id = ev.id) !== null && _ev$id !== void 0 ? _ev$id : ev.number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, group.group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Evolves, \"+K23nGhnXSGHf0s5dxN3CVAw7x0=\");\n_c4 = Evolves;\nexport default Evolves;\n\n// import { useEffect, useState } from \"react\";\n\n// function Evolves() {\n//   const [groups, setGroups] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:8000/evolves\") // rota do backend\n//       .then((res) => res.json())\n//       .then((data) => setGroups(data))\n//       .catch((err) => console.error(err));\n//   }, []);\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h1>Evoluções por Grupo</h1>\n\n//       {groups.map((group) => (\n//         <div key={group.group} style={{ marginBottom: \"20px\" }}>\n//           <h2>Grupo {group.group}</h2>\n//           <ul>\n//             {group.chain.map((poke) => (\n//               <li key={poke.number}>\n//                 #{poke.number} - {poke.name}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Evolves;\n\n// import { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n\n// // === styled-components baseados no seu snippet ===\n// const PokemonEvoGrid = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   gap: 20px;\n//   flex-wrap: wrap;\n//   margin: 20px 0;\n// `;\n\n// const EvolveCard = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   border-radius: 10px;\n//   padding: 10px;\n//   background: #f8f9fa;\n//   box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n// `;\n\n// const PokeImgEvo = styled.img`\n//   width: 120px;\n//   height: 120px;\n//   object-fit: contain;\n// `;\n\n// // função utilitária p/ construir src da imagem\n// const imageIdForSrc = (pokemon) => {\n//   return pokemon.id ?? pokemon.number;\n// };\n\n// function EvolutionsPage() {\n//   const [groups, setGroups] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:8000/evolutions\") // rota backend\n//       .then((res) => res.json())\n//       .then((data) => setGroups(data))\n//       .catch((err) => console.error(err));\n//   }, []);\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h1 style={{ textAlign: \"center\" }}>Evoluções por Grupo</h1>\n\n//       {groups.map((group) => (\n//         <div key={group.group}>\n//           <h2 style={{ textAlign: \"center\" }}>Grupo {group.group}</h2>\n\n//           {group.chain && (\n//             <PokemonEvoGrid>\n//               {group.chain.map((ev) => (\n//                 <EvolveCard key={ev.id ?? ev.number}>\n//                   <PokeImgEvo\n//                     src={\n//                       ev.image ||\n//                       `http://localhost:8000/home/${imageIdForSrc(ev)}/img`\n//                     }\n//                     alt={ev.name}\n//                   />\n//                 </EvolveCard>\n//               ))}\n//             </PokemonEvoGrid>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default EvolutionsPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FramePokeEvoGrid\");\n$RefreshReg$(_c2, \"EvolveCard\");\n$RefreshReg$(_c3, \"PokeImgEvo\");\n$RefreshReg$(_c4, \"Evolves\");","map":{"version":3,"names":["useEffect","useState","styled","jsxDEV","_jsxDEV","FramePokeEvoGrid","div","_c","EvolveCard","_c2","PokeImgEvo","img","_c3","Evolves","_s","evolves","setEvolves","loading","setLoading","fetch","then","res","json","data","catch","err","console","error","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","style","padding","textAlign","map","group","_group$chain","chain","ev","_ev$id","src","image","number","alt","name","id","_c4","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/routes/Evolves.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FramePokeEvoGrid = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst EvolveCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 12px;\r\n  padding: 12px;\r\n  background: #f8f9fa;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  object-fit: contain;\r\n`;\r\n\r\nfunction Evolves() {\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/evolves\")\r\n      .then((res) => res.json())\r\n      .then((data) => setEvolves(data || []))\r\n      .catch((err) => {\r\n        console.error(\"Erro ao buscar evoluções:\", err);\r\n        setEvolves([]);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  if (loading) return <p>Carregando...</p>;\r\n  if (!Array.isArray(evolves) || evolves.length === 0) return <p>Nenhuma evolução encontrada.</p>;\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1 style={{ textAlign: \"center\" }}>Evoluções</h1>\r\n\r\n      {evolves.map((group) => (\r\n        <div key={group.group}>\r\n          <h2 style={{ textAlign: \"center\" }}>Grupo {group.group}</h2>\r\n\r\n          <FramePokeEvoGrid>\r\n            {group.chain?.map((ev) => (\r\n              <EvolveCard key={ev.id ?? ev.number}>\r\n                <PokeImgEvo\r\n                  src={ev.image || `http://localhost:8000/home/${ev.number}/img`}\r\n                  alt={ev.name}\r\n                />\r\n              </EvolveCard>\r\n            ))}\r\n          </FramePokeEvoGrid>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Evolves;\r\n\r\n\r\n\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// function Evolves() {\r\n//   const [groups, setGroups] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:8000/evolves\") // rota do backend\r\n//       .then((res) => res.json())\r\n//       .then((data) => setGroups(data))\r\n//       .catch((err) => console.error(err));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <h1>Evoluções por Grupo</h1>\r\n\r\n//       {groups.map((group) => (\r\n//         <div key={group.group} style={{ marginBottom: \"20px\" }}>\r\n//           <h2>Grupo {group.group}</h2>\r\n//           <ul>\r\n//             {group.chain.map((poke) => (\r\n//               <li key={poke.number}>\r\n//                 #{poke.number} - {poke.name}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Evolves;\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\n// // === styled-components baseados no seu snippet ===\r\n// const PokemonEvoGrid = styled.div`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   gap: 20px;\r\n//   flex-wrap: wrap;\r\n//   margin: 20px 0;\r\n// `;\r\n\r\n// const EvolveCard = styled.div`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   border-radius: 10px;\r\n//   padding: 10px;\r\n//   background: #f8f9fa;\r\n//   box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n// `;\r\n\r\n// const PokeImgEvo = styled.img`\r\n//   width: 120px;\r\n//   height: 120px;\r\n//   object-fit: contain;\r\n// `;\r\n\r\n// // função utilitária p/ construir src da imagem\r\n// const imageIdForSrc = (pokemon) => {\r\n//   return pokemon.id ?? pokemon.number;\r\n// };\r\n\r\n// function EvolutionsPage() {\r\n//   const [groups, setGroups] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:8000/evolutions\") // rota backend\r\n//       .then((res) => res.json())\r\n//       .then((data) => setGroups(data))\r\n//       .catch((err) => console.error(err));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <h1 style={{ textAlign: \"center\" }}>Evoluções por Grupo</h1>\r\n\r\n//       {groups.map((group) => (\r\n//         <div key={group.group}>\r\n//           <h2 style={{ textAlign: \"center\" }}>Grupo {group.group}</h2>\r\n\r\n//           {group.chain && (\r\n//             <PokemonEvoGrid>\r\n//               {group.chain.map((ev) => (\r\n//                 <EvolveCard key={ev.id ?? ev.number}>\r\n//                   <PokeImgEvo\r\n//                     src={\r\n//                       ev.image ||\r\n//                       `http://localhost:8000/home/${imageIdForSrc(ev)}/img`\r\n//                     }\r\n//                     alt={ev.name}\r\n//                   />\r\n//                 </EvolveCard>\r\n//               ))}\r\n//             </PokemonEvoGrid>\r\n//           )}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default EvolutionsPage;\r\n"],"mappings":"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AAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAxCQD,OAAO;AAAAuC,GAAA,GAAPvC,OAAO;AA0ChB,eAAeA,OAAO;;AAItB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAN,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAwC,GAAA;AAAAC,YAAA,CAAA9C,EAAA;AAAA8C,YAAA,CAAA5C,GAAA;AAAA4C,YAAA,CAAAzC,GAAA;AAAAyC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
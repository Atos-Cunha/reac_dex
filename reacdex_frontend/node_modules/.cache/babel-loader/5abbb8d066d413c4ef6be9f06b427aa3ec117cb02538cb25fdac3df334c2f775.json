{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\FrameTypes\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  height: auto;\n  margin: 0 auto; \n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\n`;\n_c = Card;\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c2 = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 30px;\n  height: 30px; \n`;\n_c3 = PokemonImageType;\nconst Arrow = styled.span`\n  font-size: 30px;\n  font-weight: bold;\n  color: #000;\n  margin: 0 10px;\n  display: flex;\n  align-items: center;\n`;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n\n/* normaliza '#001' / '001' / 1 -> '1' */\n_c4 = Spinner;\nfunction normalizeNumber(value) {\n  if (value === undefined || value === null) return null;\n  const s = String(value);\n  const digits = s.replace(/\\D/g, \"\");\n  if (!digits) return null;\n  return String(parseInt(digits, 10));\n}\n\n/* id/number normalizado de um Pokémon do /home */\nfunction pokeKeyFromHome(p) {\n  var _normalizeNumber;\n  return (_normalizeNumber = normalizeNumber(p === null || p === void 0 ? void 0 : p.number)) !== null && _normalizeNumber !== void 0 ? _normalizeNumber : normalizeNumber(p === null || p === void 0 ? void 0 : p.id);\n}\n\n/* monta id da imagem */\nfunction imageIdForSrc(obj) {\n  if (obj == null) return \"\";\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\n  if (obj.number) {\n    const raw = String(obj.number).replace(/^#/, \"\");\n    if (raw) return raw;\n  }\n  return normalizeNumber(obj.number) || \"\";\n}\nfunction FrameTypes() {\n  _s();\n  const [pokemonstype, setPokemonsType] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([fetch(\"http://localhost:8000/type\")]);\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\n        const typesData = await resTypes.json();\n        setPokemonsType(typesData || []);\n      } catch (err) {\n        console.error(\"Falha no fetch:\", err.message);\n        setPokemonsType([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 25\n  }, this);\n  if (!(pokemonstype !== null && pokemonstype !== void 0 && pokemonstype.length)) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 39\n  }, this);\n\n  // ---- AGRUPA por cadeias evolutivas (e adiciona \"solteiros\") ----\n  const evoGroups = [];\n\n  // 1) grupos vindos do /evolve\n  for (const chain of evolves || []) {\n    var _chain$pokemon, _chain$pokemon2;\n    const fullLine = [{\n      number: chain === null || chain === void 0 ? void 0 : (_chain$pokemon = chain.pokemon) === null || _chain$pokemon === void 0 ? void 0 : _chain$pokemon.number,\n      name: chain === null || chain === void 0 ? void 0 : (_chain$pokemon2 = chain.pokemon) === null || _chain$pokemon2 === void 0 ? void 0 : _chain$pokemon2.name\n    }, ...((chain === null || chain === void 0 ? void 0 : chain.evolve) || [])].filter(x => x && x.number);\n    const group = fullLine.map(ev => pokemons.find(p => pokeKeyFromHome(p) === normalizeNumber(ev.number))).filter(Boolean);\n    if (group.length > 0) {\n      evoGroups.push(group);\n    }\n  }\n\n  // 2) adiciona pokémon que não apareceu em nenhuma cadeia (sem evolução)\n  const covered = new Set(evoGroups.flat().map(p => pokeKeyFromHome(p)).filter(Boolean));\n  const singles = pokemons.filter(p => {\n    const key = pokeKeyFromHome(p);\n    return key && !covered.has(key);\n  });\n  for (const single of singles) {\n    evoGroups.push([single]); // um grid com um único card\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: evoGroups.map((group, idx) => /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n      children: (Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n        src: `http://localhost:8000/type/${encodeURIComponent(type)}.png`,\n        alt: String(type)\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n_s(FrameTypes, \"nJOMuXgYpUHOczUmlUm0Y2RXa0I=\");\n_c5 = FrameTypes;\nexport default FrameTypes;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c3, \"PokemonImageType\");\n$RefreshReg$(_c4, \"Spinner\");\n$RefreshReg$(_c5, \"FrameTypes\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","Card","div","_c","PokemonImageTypeFrame","_c2","PokemonImageType","img","_c3","Arrow","span","spin","Spinner","_c4","normalizeNumber","value","undefined","s","String","digits","replace","parseInt","pokeKeyFromHome","p","_normalizeNumber","number","id","imageIdForSrc","obj","raw","FrameTypes","_s","pokemonstype","setPokemonsType","loading","setLoading","fetchData","resPokemons","resTypes","resEvolves","Promise","all","fetch","ok","Error","typesData","json","err","console","error","message","fileName","_jsxFileName","lineNumber","columnNumber","length","evoGroups","chain","evolves","_chain$pokemon","_chain$pokemon2","fullLine","pokemon","name","evolve","filter","x","group","map","ev","pokemons","find","Boolean","push","covered","Set","flat","singles","key","has","single","children","idx","Array","isArray","type","slice","src","encodeURIComponent","alt","_c5","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/FrameTypes/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  height: auto;\r\n  margin: 0 auto; \r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\r\n`;\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 30px;\r\n  height: 30px; \r\n`;\r\n\r\nconst Arrow = styled.span`\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  color: #000;\r\n  margin: 0 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\n/* normaliza '#001' / '001' / 1 -> '1' */\r\nfunction normalizeNumber(value) {\r\n    if (value === undefined || value === null) return null;\r\n    const s = String(value);\r\n    const digits = s.replace(/\\D/g, \"\");\r\n    if (!digits) return null;\r\n    return String(parseInt(digits, 10));\r\n}\r\n\r\n/* id/number normalizado de um Pokémon do /home */\r\nfunction pokeKeyFromHome(p) {\r\n    return normalizeNumber(p?.number) ?? normalizeNumber(p?.id);\r\n}\r\n\r\n/* monta id da imagem */\r\nfunction imageIdForSrc(obj) {\r\n    if (obj == null) return \"\";\r\n    if (obj.id !== undefined && obj.id !== null) return String(obj.id);\r\n    if (obj.number) {\r\n        const raw = String(obj.number).replace(/^#/, \"\");\r\n        if (raw) return raw;\r\n    }\r\n    return normalizeNumber(obj.number) || \"\";\r\n}\r\n\r\nfunction FrameTypes() {\r\n    const [pokemonstype, setPokemonsType] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const [resPokemons, resTypes, resEvolves] = await Promise.all([\r\n                    fetch(\"http://localhost:8000/type\")\r\n                ]);\r\n\r\n                if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\r\n\r\n                const typesData = await resTypes.json();\r\n\r\n                setPokemonsType(typesData || []);\r\n            } catch (err) {\r\n                console.error(\"Falha no fetch:\", err.message);\r\n                setPokemonsType([]);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (loading) return <Spinner />;\r\n    if (!pokemonstype?.length) return <Spinner />;\r\n\r\n    // ---- AGRUPA por cadeias evolutivas (e adiciona \"solteiros\") ----\r\n    const evoGroups = [];\r\n\r\n    // 1) grupos vindos do /evolve\r\n    for (const chain of (evolves || [])) {\r\n        const fullLine = [\r\n            { number: chain?.pokemon?.number, name: chain?.pokemon?.name },\r\n            ...((chain?.evolve) || []),\r\n        ].filter(x => x && x.number);\r\n\r\n        const group = fullLine\r\n            .map(ev => pokemons.find(p => pokeKeyFromHome(p) === normalizeNumber(ev.number)))\r\n            .filter(Boolean);\r\n\r\n        if (group.length > 0) {\r\n            evoGroups.push(group);\r\n        }\r\n    }\r\n\r\n    // 2) adiciona pokémon que não apareceu em nenhuma cadeia (sem evolução)\r\n    const covered = new Set(\r\n        evoGroups.flat().map(p => pokeKeyFromHome(p)).filter(Boolean)\r\n    );\r\n\r\n    const singles = pokemons.filter(p => {\r\n        const key = pokeKeyFromHome(p);\r\n        return key && !covered.has(key);\r\n    });\r\n\r\n    for (const single of singles) {\r\n        evoGroups.push([single]); // um grid com um único card\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            {evoGroups.map((group, idx) => (\r\n                <PokemonImageTypeFrame>\r\n                    {(Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type])\r\n                        .filter(Boolean)\r\n                        .map((type) => (\r\n                            <PokemonImageType\r\n                                key={type}\r\n                                src={`http://localhost:8000/type/${encodeURIComponent(type)}.png`}\r\n                                alt={String(type)}\r\n                            />\r\n                        ))}\r\n                </PokemonImageTypeFrame>\r\n\r\n            ))}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default FrameTypes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
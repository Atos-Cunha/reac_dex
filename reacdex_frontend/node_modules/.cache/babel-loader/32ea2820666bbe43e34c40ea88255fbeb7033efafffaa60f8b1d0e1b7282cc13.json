{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\CardPokemons\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  height: auto;\n  margin: 0 auto; \n  background-color: #e3f5fd;\n  border-radius: 10px;\n  display: flex;\n  justify-content: flex-start; /* aproxima os cards */\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 10px; /* distância entre os cards */\n  padding: 15px;\n`;\n_c = Card;\nconst PokemonCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  margin: 3px; /* menos espaçamento */\n  border-radius: 10px;\n  background: #ffffff;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.25); /* sombra maior */\n  transition: transform 0.2s, box-shadow 0.2s;\n  \n  /* destaque ao passar o mouse */\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 18px rgba(0,0,0,0.35);\n  }\n`;\nconst PokemonCardHighlighted = styled(PokemonCard)`\n  background: #d0f0ff;\n  border: 2px solid #3498db;\n`;\nconst PokeNumber = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c2 = PokeNumber;\nconst PokemonImage = styled.img`\n  height: 200px;  \n  width: 200px;\n`;\n_c3 = PokemonImage;\nconst PokeName = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c4 = PokeName;\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c5 = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 30px;\n  height: 30px; \n`;\n_c6 = PokemonImageType;\nconst EvoLine = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  // margin-top: 8px;\n`;\n_c7 = EvoLine;\nconst PokeImgEvo = styled.img`\n  width: 35px;\n  height: 35px; \n`;\n_c8 = PokeImgEvo;\nconst Arrow = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n`;\n_c9 = Arrow;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n\n/* helper para normalizar '#001' / '001' / 1 -> '1' (string) */\n_c0 = Spinner;\nfunction normalizeNumber(value) {\n  if (value === undefined || value === null) return null;\n  const s = String(value);\n  const digits = s.replace(/\\D/g, \"\");\n  if (!digits) return null;\n  // remove zeros à esquerda: parseInt -> '1' de '001'\n  return String(parseInt(digits, 10));\n}\n\n/* helper para montar src da imagem com fallback */\nfunction imageIdForSrc(obj) {\n  // tenta id (numérico) primeiro, senão number (raw), senão normalized digits\n  if (obj == null) return \"\";\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\n  if (obj.number) {\n    // se number já tiver formato utilizável, remova apenas o '#'\n    const raw = String(obj.number).replace(/^#/, \"\");\n    if (raw) return raw;\n  }\n  return normalizeNumber(obj.number) || \"\";\n}\nfunction CardPokemons() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [evolves, setEvolves] = useState([]);\n  const [pokemonstype, setPokemonsType] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([fetch(\"http://localhost:8000/home\"), fetch(\"http://localhost:8000/type\"), fetch(\"http://localhost:8000/evolve\")]);\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\n        const pokemonsData = await resPokemons.json();\n        const typesData = await resTypes.json();\n        const evolvesData = await resEvolves.json();\n        setPokemons(pokemonsData || []);\n        setPokemonsType(typesData || []);\n        setEvolves(evolvesData || []);\n\n        // descomente para debug rápido:\n        // console.log(\"pokemons\", pokemonsData);\n        // console.log(\"evolves\", evolvesData);\n      } catch (err) {\n        console.error(\"Falha no fetch:\", err.message);\n        setPokemons([]);\n        setPokemonsType([]);\n        setEvolves([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 23\n  }, this);\n  if (!pokemons || pokemons.length === 0) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 50\n  }, this);\n  if (!pokemonstype || pokemonstype.length === 0) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 58\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: pokemons.map(pokemon => {\n      var _pokemon$id, _pokemon$id2;\n      const pokeKey = normalizeNumber(pokemon.number) || normalizeNumber(pokemon.id);\n      let baseEntry = evolves.find(ev => {\n        var _ev$pokemon;\n        return normalizeNumber(ev === null || ev === void 0 ? void 0 : (_ev$pokemon = ev.pokemon) === null || _ev$pokemon === void 0 ? void 0 : _ev$pokemon.number) === pokeKey || Array.isArray(ev.evolve) && ev.evolve.some(child => normalizeNumber(child.number) === pokeKey);\n      });\n      let fullEvoLine = [];\n      if (baseEntry) {\n        fullEvoLine = [{\n          number: baseEntry.pokemon.number,\n          name: baseEntry.pokemon.name\n        }, ...(baseEntry.evolve || [])];\n      }\n      const CardComponent = fullEvoLine.length > 1 ? PokemonCardHighlighted : PokemonCard;\n      return /*#__PURE__*/_jsxDEV(CardComponent, {\n        children: [/*#__PURE__*/_jsxDEV(PokeNumber, {\n          children: [\"#\", (_pokemon$id2 = pokemon.id) !== null && _pokemon$id2 !== void 0 ? _pokemon$id2 : pokemon.number || \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(PokemonImage, {\n          src: pokemon.image || `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(PokeName, {\n          children: pokemon.name.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n          children: (Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n            src: `http://localhost:8000/type/${encodeURIComponent(type)}.png`,\n            alt: String(type)\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 7\n        }, this), fullEvoLine.length > 1 && /*#__PURE__*/_jsxDEV(EvoLine, {\n          children: fullEvoLine.map((ev, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 4\n            },\n            children: [idx > 0 && /*#__PURE__*/_jsxDEV(Arrow, {\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(PokeImgEvo, {\n              src: `http://localhost:8000/home/${String(ev.number).replace(/\\D/g, \"\")}/img`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, `${ev.number}-${ev.name}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this)]\n      }, (_pokemon$id = pokemon.id) !== null && _pokemon$id !== void 0 ? _pokemon$id : pokemon.number, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(CardPokemons, \"ZnE0jgmFQ1Y/BptpTjFefOkr0pw=\");\n_c1 = CardPokemons;\nexport default CardPokemons;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"PokeNumber\");\n$RefreshReg$(_c3, \"PokemonImage\");\n$RefreshReg$(_c4, \"PokeName\");\n$RefreshReg$(_c5, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c6, \"PokemonImageType\");\n$RefreshReg$(_c7, \"EvoLine\");\n$RefreshReg$(_c8, \"PokeImgEvo\");\n$RefreshReg$(_c9, \"Arrow\");\n$RefreshReg$(_c0, \"Spinner\");\n$RefreshReg$(_c1, \"CardPokemons\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","Card","div","_c","PokemonCard","PokemonCardHighlighted","PokeNumber","p","_c2","PokemonImage","img","_c3","PokeName","_c4","PokemonImageTypeFrame","_c5","PokemonImageType","_c6","EvoLine","_c7","PokeImgEvo","_c8","Arrow","span","_c9","spin","Spinner","_c0","normalizeNumber","value","undefined","s","String","digits","replace","parseInt","imageIdForSrc","obj","id","number","raw","CardPokemons","_s","pokemons","setPokemons","evolves","setEvolves","pokemonstype","setPokemonsType","loading","setLoading","fetchData","resPokemons","resTypes","resEvolves","Promise","all","fetch","ok","Error","pokemonsData","json","typesData","evolvesData","err","console","error","message","fileName","_jsxFileName","lineNumber","columnNumber","length","children","map","pokemon","_pokemon$id","_pokemon$id2","pokeKey","baseEntry","find","ev","_ev$pokemon","Array","isArray","evolve","some","child","fullEvoLine","name","CardComponent","src","image","alt","toUpperCase","type","slice","filter","Boolean","encodeURIComponent","idx","style","display","alignItems","gap","_c1","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/CardPokemons/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  height: auto;\r\n  margin: 0 auto; \r\n  background-color: #e3f5fd;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: flex-start; /* aproxima os cards */\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  gap: 10px; /* distância entre os cards */\r\n  padding: 15px;\r\n`;\r\n\r\nconst PokemonCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 15px;\r\n  margin: 3px; /* menos espaçamento */\r\n  border-radius: 10px;\r\n  background: #ffffff;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.25); /* sombra maior */\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n  \r\n  /* destaque ao passar o mouse */\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 18px rgba(0,0,0,0.35);\r\n  }\r\n`;\r\n\r\nconst PokemonCardHighlighted = styled(PokemonCard)`\r\n  background: #d0f0ff;\r\n  border: 2px solid #3498db;\r\n`;\r\n\r\nconst PokeNumber = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImage = styled.img`\r\n  height: 200px;  \r\n  width: 200px;\r\n`;\r\n\r\nconst PokeName = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 30px;\r\n  height: 30px; \r\n`;\r\n\r\nconst EvoLine = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n  // margin-top: 8px;\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 35px;\r\n  height: 35px; \r\n`;\r\n\r\nconst Arrow = styled.span`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\n/* helper para normalizar '#001' / '001' / 1 -> '1' (string) */\r\nfunction normalizeNumber(value) {\r\n  if (value === undefined || value === null) return null;\r\n  const s = String(value);\r\n  const digits = s.replace(/\\D/g, \"\");\r\n  if (!digits) return null;\r\n  // remove zeros à esquerda: parseInt -> '1' de '001'\r\n  return String(parseInt(digits, 10));\r\n}\r\n\r\n/* helper para montar src da imagem com fallback */\r\nfunction imageIdForSrc(obj) {\r\n  // tenta id (numérico) primeiro, senão number (raw), senão normalized digits\r\n  if (obj == null) return \"\";\r\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\r\n  if (obj.number) {\r\n    // se number já tiver formato utilizável, remova apenas o '#'\r\n    const raw = String(obj.number).replace(/^#/, \"\");\r\n    if (raw) return raw;\r\n  }\r\n  return normalizeNumber(obj.number) || \"\";\r\n}\r\n\r\nfunction CardPokemons() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [pokemonstype, setPokemonsType] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([\r\n          fetch(\"http://localhost:8000/home\"),\r\n          fetch(\"http://localhost:8000/type\"),\r\n          fetch(\"http://localhost:8000/evolve\"),\r\n        ]);\r\n\r\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\r\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\r\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\r\n\r\n        const pokemonsData = await resPokemons.json();\r\n        const typesData = await resTypes.json();\r\n        const evolvesData = await resEvolves.json();\r\n\r\n        setPokemons(pokemonsData || []);\r\n        setPokemonsType(typesData || []);\r\n        setEvolves(evolvesData || []);\r\n\r\n        // descomente para debug rápido:\r\n        // console.log(\"pokemons\", pokemonsData);\r\n        // console.log(\"evolves\", evolvesData);\r\n\r\n      } catch (err) {\r\n        console.error(\"Falha no fetch:\", err.message);\r\n        setPokemons([]);\r\n        setPokemonsType([]);\r\n        setEvolves([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (!pokemons || pokemons.length === 0) return <Spinner />;\r\n  if (!pokemonstype || pokemonstype.length === 0) return <Spinner />;\r\n\r\n  return (\r\n    <Card>\r\n      {pokemons.map((pokemon) => {\r\n  const pokeKey = normalizeNumber(pokemon.number) || normalizeNumber(pokemon.id);\r\n\r\n  let baseEntry = evolves.find(ev =>\r\n    normalizeNumber(ev?.pokemon?.number) === pokeKey ||\r\n    (Array.isArray(ev.evolve) && ev.evolve.some(child => normalizeNumber(child.number) === pokeKey))\r\n  );\r\n\r\n  let fullEvoLine = [];\r\n  if (baseEntry) {\r\n    fullEvoLine = [\r\n      { number: baseEntry.pokemon.number, name: baseEntry.pokemon.name },\r\n      ...(baseEntry.evolve || [])\r\n    ];\r\n  }\r\n\r\n  const CardComponent = fullEvoLine.length > 1 ? PokemonCardHighlighted : PokemonCard;\r\n\r\n  return (\r\n    <CardComponent key={pokemon.id ?? pokemon.number}>\r\n      <PokeNumber>#{pokemon.id ?? (pokemon.number || \"\")}</PokeNumber>\r\n      <PokemonImage\r\n        src={pokemon.image || `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`}\r\n        alt={pokemon.name}\r\n      />\r\n      <PokeName>{pokemon.name.toUpperCase()}</PokeName>\r\n      <PokemonImageTypeFrame>\r\n        {(Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type])\r\n          .filter(Boolean)\r\n          .map((type) => (\r\n            <PokemonImageType\r\n              key={type}\r\n              src={`http://localhost:8000/type/${encodeURIComponent(type)}.png`}\r\n              alt={String(type)}\r\n            />\r\n          ))}\r\n      </PokemonImageTypeFrame>\r\n\r\n      {fullEvoLine.length > 1 && (\r\n        <EvoLine>\r\n          {fullEvoLine.map((ev, idx) => (\r\n            <span key={`${ev.number}-${ev.name}`} style={{ display: \"flex\", alignItems: \"center\", gap: 4 }}>\r\n              {idx > 0 && <Arrow>→</Arrow>}\r\n              <PokeImgEvo\r\n                src={`http://localhost:8000/home/${String(ev.number).replace(/\\D/g, \"\")}/img`}\r\n              />\r\n            </span>\r\n          ))}\r\n        </EvoLine>\r\n      )}\r\n    </CardComponent>\r\n  );\r\n})}\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardPokemons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
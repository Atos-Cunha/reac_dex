{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\FrameTypes\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FrameDef = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, minmax(180px, 1fr));\n  gap: 16px;\n  margin-left: 10%;\n  margin-right: 10%;\n  background-image: linear-gradient(90deg, #002F52 35%, #326589 165%);\n  padding: 16px;\n`;\n_c = FrameDef;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n_c2 = Column;\nconst SectionTitle = styled.h2`\n  color: #fff;\n  font-size: 16px;\n  letter-spacing: 1px;\n  margin: 8px 0 4px;\n`;\n_c3 = SectionTitle;\nconst Card = styled.div`\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\n  width: 120px;\n  border-radius: 10px;\n  text-align: center;\n  padding: 6px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.08);\n`;\n_c4 = Card;\nconst PokeImgType = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: contain;\n`;\n_c5 = PokeImgType;\nconst TitleType = styled.h3`\n  text-transform: uppercase;\n  font-size: 13px;\n  margin: 6px 0 0;\n  color: #1f2937;\n`;\n_c6 = TitleType;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n_c7 = Spinner;\nconst ErrorBox = styled.pre`\n  background: #fee2e2;\n  color: #991b1b;\n  padding: 10px 12px;\n  border-radius: 8px;\n  white-space: pre-wrap;\n  margin: 16px auto;\n`;\n\n/** Normaliza name/url e preserva ordem vinda do backend */\n_c8 = ErrorBox;\nfunction normalizeItem(raw = {}) {\n  var _url$split$pop;\n  const url = raw.url || raw.path || raw.src || \"\";\n  const nameFromUrl = typeof url === \"string\" ? (_url$split$pop = url.split(\"/\").pop()) === null || _url$split$pop === void 0 ? void 0 : _url$split$pop.replace(\".png\", \"\") : \"\";\n  const name = raw.name || raw.tipo || raw.type || raw.nome || nameFromUrl || \"unknown\";\n  const desc = (raw.description || raw.desc || raw.group || raw.grupo || \"\").toString().toLowerCase();\n  return {\n    name,\n    url,\n    description: desc\n  };\n}\n\n/** Garante que a URL da imagem seja absoluta no host do backend */\nfunction buildImgSrc(u) {\n  if (!u) return \"\";\n  if (u.startsWith(\"http://\") || u.startsWith(\"https://\")) return u;\n  const path = u.startsWith(\"/\") ? u : `/${u}`;\n  return `http://localhost:8000${path}`;\n}\n\n/**\r\n * Aceita diversos formatos:\r\n *  - Array: [{ name, url, description: \"type\"/\"strong\"/\"weak\" }, ...]\r\n *  - Objeto agrupado: { type: [...], strong: [...], weak: [...] }\r\n *  - Sinonímias: strong=friend/vantagem | weak=foe/desvantagem\r\n */\nfunction normalizeTypesFf(data) {\n  const empty = {\n    type: [],\n    strong: [],\n    weak: []\n  };\n  if (!data) return empty;\n\n  // Caso 1: já agrupado em objeto\n  if (!Array.isArray(data)) {\n    const keys = Object.keys(data).reduce((acc, k) => {\n      acc[k.toLowerCase()] = data[k];\n      return acc;\n    }, {});\n    const pick = kArr => {\n      for (const k of kArr) {\n        const v = keys[k];\n        if (Array.isArray(v)) return v.map(normalizeItem);\n      }\n      return [];\n    };\n    return {\n      type: pick([\"type\", \"types\"]),\n      strong: pick([\"strong\", \"friend\", \"advantages\", \"vantagem\", \"advantagesagainst\", \"strongagainst\"]),\n      weak: pick([\"weak\", \"foe\", \"desvantagem\", \"weaknesses\", \"weakagainst\"])\n    };\n  }\n\n  // Caso 2: array plano\n  const out = {\n    ...empty\n  };\n  data.map(normalizeItem).forEach(item => {\n    const d = item.description;\n    if (d === \"type\") out.type.push(item);else if (d === \"strong\" || d === \"friend\" || d === \"vantagem\" || d === \"advantages\") out.strong.push(item);else if (d === \"weak\" || d === \"foe\" || d === \"desvantagem\" || d === \"weaknesses\") out.weak.push(item);\n  });\n  return out;\n}\nfunction FrameTypes() {\n  _s();\n  const [groups, setGroups] = useState({\n    type: [],\n    strong: [],\n    weak: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [errMsg, setErrMsg] = useState(\"\");\n  useEffect(() => {\n    async function fetchTypes() {\n      setErrMsg(\"\");\n      try {\n        var _normalized$type;\n        const url = \"http://localhost:8000/typesFf\";\n        const res = await fetch(url);\n        if (!res.ok) throw new Error(`HTTP ${res.status} ao buscar ${url}`);\n        const data = await res.json();\n        console.log(\"📦 Resposta /typesFf (bruta):\", data);\n        const normalized = normalizeTypesFf(data);\n        console.log(\"✅ Normalizado:\", {\n          counts: {\n            type: normalized.type.length,\n            strong: normalized.strong.length,\n            weak: normalized.weak.length\n          },\n          sampleType: (_normalized$type = normalized.type) === null || _normalized$type === void 0 ? void 0 : _normalized$type[0]\n        });\n        setGroups(normalized);\n      } catch (err) {\n        console.error(\"❌ Erro no fetch:\", err);\n        setErrMsg(String((err === null || err === void 0 ? void 0 : err.message) || err));\n        setGroups({\n          type: [],\n          strong: [],\n          weak: []\n        });\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTypes();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 23\n  }, this);\n  const isEmpty = !groups.type.length && !groups.strong.length && !groups.weak.length;\n  if (isEmpty) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ErrorBox, {\n        children: [\"Nenhum tipo encontrado.\", \"\\n\", \"Verifique se a rota /typesFf est\\xE1 retornando dados no formato esperado.\", \"\\n\", \"Dica: abra o console para ver os logs \\\"Resposta /typesFf\\\" e \\\"Normalizado\\\".\", errMsg ? `\\nDetalhes do erro: ${errMsg}` : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(FrameDef, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"TYPE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), groups.type.map(t => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(PokeImgType, {\n          src: buildImgSrc(t.url),\n          alt: t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TitleType, {\n          children: t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, `type-${t.name}-${t.url}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"STRONG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), groups.strong.map(t => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(PokeImgType, {\n          src: buildImgSrc(t.url),\n          alt: t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TitleType, {\n          children: t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, `strong-${t.name}-${t.url}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"WEAK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), groups.weak.map(t => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(PokeImgType, {\n          src: buildImgSrc(t.url),\n          alt: t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TitleType, {\n          children: t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, `weak-${t.name}-${t.url}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(FrameTypes, \"Z3/bRkEp+uq/Q+V47mwr7qYWFfU=\");\n_c9 = FrameTypes;\nexport default FrameTypes;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"FrameDef\");\n$RefreshReg$(_c2, \"Column\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"PokeImgType\");\n$RefreshReg$(_c6, \"TitleType\");\n$RefreshReg$(_c7, \"Spinner\");\n$RefreshReg$(_c8, \"ErrorBox\");\n$RefreshReg$(_c9, \"FrameTypes\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","Fragment","_Fragment","FrameDef","div","_c","Column","_c2","SectionTitle","h2","_c3","Card","_c4","PokeImgType","img","_c5","TitleType","h3","_c6","spin","Spinner","_c7","ErrorBox","pre","_c8","normalizeItem","raw","_url$split$pop","url","path","src","nameFromUrl","split","pop","replace","name","tipo","type","nome","desc","description","group","grupo","toString","toLowerCase","buildImgSrc","u","startsWith","normalizeTypesFf","data","empty","strong","weak","Array","isArray","keys","Object","reduce","acc","k","pick","kArr","v","map","out","forEach","item","d","push","FrameTypes","_s","groups","setGroups","loading","setLoading","errMsg","setErrMsg","fetchTypes","_normalized$type","res","fetch","ok","Error","status","json","console","log","normalized","counts","length","sampleType","err","error","String","message","fileName","_jsxFileName","lineNumber","columnNumber","isEmpty","children","t","alt","_c9","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/FrameTypes/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst FrameDef = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, minmax(180px, 1fr));\r\n  gap: 16px;\r\n  margin-left: 10%;\r\n  margin-right: 10%;\r\n  background-image: linear-gradient(90deg, #002F52 35%, #326589 165%);\r\n  padding: 16px;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  color: #fff;\r\n  font-size: 16px;\r\n  letter-spacing: 1px;\r\n  margin: 8px 0 4px;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\r\n  width: 120px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  padding: 6px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.08);\r\n`;\r\n\r\nconst PokeImgType = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst TitleType = styled.h3`\r\n  text-transform: uppercase;\r\n  font-size: 13px;\r\n  margin: 6px 0 0;\r\n  color: #1f2937;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\nconst ErrorBox = styled.pre`\r\n  background: #fee2e2;\r\n  color: #991b1b;\r\n  padding: 10px 12px;\r\n  border-radius: 8px;\r\n  white-space: pre-wrap;\r\n  margin: 16px auto;\r\n`;\r\n\r\n/** Normaliza name/url e preserva ordem vinda do backend */\r\nfunction normalizeItem(raw = {}) {\r\n  const url = raw.url || raw.path || raw.src || \"\";\r\n  const nameFromUrl = typeof url === \"string\" ? url.split(\"/\").pop()?.replace(\".png\", \"\") : \"\";\r\n  const name = raw.name || raw.tipo || raw.type || raw.nome || nameFromUrl || \"unknown\";\r\n  const desc = (raw.description || raw.desc || raw.group || raw.grupo || \"\").toString().toLowerCase();\r\n  return { name, url, description: desc };\r\n}\r\n\r\n/** Garante que a URL da imagem seja absoluta no host do backend */\r\nfunction buildImgSrc(u) {\r\n  if (!u) return \"\";\r\n  if (u.startsWith(\"http://\") || u.startsWith(\"https://\")) return u;\r\n  const path = u.startsWith(\"/\") ? u : `/${u}`;\r\n  return `http://localhost:8000${path}`;\r\n}\r\n\r\n/**\r\n * Aceita diversos formatos:\r\n *  - Array: [{ name, url, description: \"type\"/\"strong\"/\"weak\" }, ...]\r\n *  - Objeto agrupado: { type: [...], strong: [...], weak: [...] }\r\n *  - Sinonímias: strong=friend/vantagem | weak=foe/desvantagem\r\n */\r\nfunction normalizeTypesFf(data) {\r\n  const empty = { type: [], strong: [], weak: [] };\r\n\r\n  if (!data) return empty;\r\n\r\n  // Caso 1: já agrupado em objeto\r\n  if (!Array.isArray(data)) {\r\n    const keys = Object.keys(data).reduce((acc, k) => {\r\n      acc[k.toLowerCase()] = data[k];\r\n      return acc;\r\n    }, {});\r\n\r\n    const pick = (kArr) => {\r\n      for (const k of kArr) {\r\n        const v = keys[k];\r\n        if (Array.isArray(v)) return v.map(normalizeItem);\r\n      }\r\n      return [];\r\n    };\r\n\r\n    return {\r\n      type: pick([\"type\", \"types\"]),\r\n      strong: pick([\"strong\", \"friend\", \"advantages\", \"vantagem\", \"advantagesagainst\", \"strongagainst\"]),\r\n      weak: pick([\"weak\", \"foe\", \"desvantagem\", \"weaknesses\", \"weakagainst\"]),\r\n    };\r\n  }\r\n\r\n  // Caso 2: array plano\r\n  const out = { ...empty };\r\n  data.map(normalizeItem).forEach((item) => {\r\n    const d = item.description;\r\n    if (d === \"type\") out.type.push(item);\r\n    else if (d === \"strong\" || d === \"friend\" || d === \"vantagem\" || d === \"advantages\") out.strong.push(item);\r\n    else if (d === \"weak\" || d === \"foe\" || d === \"desvantagem\" || d === \"weaknesses\") out.weak.push(item);\r\n  });\r\n\r\n  return out;\r\n}\r\n\r\nfunction FrameTypes() {\r\n  const [groups, setGroups] = useState({ type: [], strong: [], weak: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchTypes() {\r\n      setErrMsg(\"\");\r\n      try {\r\n        const url = \"http://localhost:8000/typesFf\";\r\n        const res = await fetch(url);\r\n        if (!res.ok) throw new Error(`HTTP ${res.status} ao buscar ${url}`);\r\n        const data = await res.json();\r\n\r\n        console.log(\"📦 Resposta /typesFf (bruta):\", data);\r\n\r\n        const normalized = normalizeTypesFf(data);\r\n\r\n        console.log(\"✅ Normalizado:\", {\r\n          counts: {\r\n            type: normalized.type.length,\r\n            strong: normalized.strong.length,\r\n            weak: normalized.weak.length,\r\n          },\r\n          sampleType: normalized.type?.[0],\r\n        });\r\n\r\n        setGroups(normalized);\r\n      } catch (err) {\r\n        console.error(\"❌ Erro no fetch:\", err);\r\n        setErrMsg(String(err?.message || err));\r\n        setGroups({ type: [], strong: [], weak: [] });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchTypes();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  const isEmpty =\r\n    !groups.type.length && !groups.strong.length && !groups.weak.length;\r\n\r\n  if (isEmpty) {\r\n    return (\r\n      <>\r\n        <ErrorBox>\r\n          Nenhum tipo encontrado.\r\n          {\"\\n\"}\r\n          Verifique se a rota /typesFf está retornando dados no formato esperado.\r\n          {\"\\n\"}\r\n          Dica: abra o console para ver os logs \"Resposta /typesFf\" e \"Normalizado\".\r\n          {errMsg ? `\\nDetalhes do erro: ${errMsg}` : \"\"}\r\n        </ErrorBox>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FrameDef>\r\n      {/* TYPE */}\r\n      <Column>\r\n        <SectionTitle>TYPE</SectionTitle>\r\n        {groups.type.map((t) => (\r\n          <Card key={`type-${t.name}-${t.url}`}>\r\n            <PokeImgType src={buildImgSrc(t.url)} alt={t.name} />\r\n            <TitleType>{t.name}</TitleType>\r\n          </Card>\r\n        ))}\r\n      </Column>\r\n\r\n      {/* STRONG (friend / vantagem) */}\r\n      <Column>\r\n        <SectionTitle>STRONG</SectionTitle>\r\n        {groups.strong.map((t) => (\r\n          <Card key={`strong-${t.name}-${t.url}`}>\r\n            <PokeImgType src={buildImgSrc(t.url)} alt={t.name} />\r\n            <TitleType>{t.name}</TitleType>\r\n          </Card>\r\n        ))}\r\n      </Column>\r\n\r\n      {/* WEAK (foe / desvantagem) */}\r\n      <Column>\r\n        <SectionTitle>WEAK</SectionTitle>\r\n        {groups.weak.map((t) => (\r\n          <Card key={`weak-${t.name}-${t.url}`}>\r\n            <PokeImgType src={buildImgSrc(t.url)} alt={t.name} />\r\n            <TitleType>{t.name}</TitleType>\r\n          </Card>\r\n        ))}\r\n      </Column>\r\n    </FrameDef>\r\n  );\r\n}\r\n\r\nexport default FrameTypes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport styled, { keyframes } from \"styled-components\";\nconst PokeEvolveFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: \"6px\";\n  padding: 15px;\n  margin: 5px;\n`;\nconst PokemonImageEvo = styled.img`\n  width: 20px;\n  height: 20px; \n`;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\nuseEffect(() => {\n  async function fetchPokemonsEvolve() {\n    try {\n      const response = await fetch(\"http://localhost:8000/home\");\n      const data = await response.json();\n\n      // carrega evoluções de cada pokemon\n      const withEvolutions = await Promise.all(data.map(async p => {\n        try {\n          const evoRes = await fetch(`http://localhost:8000/evolve/${p.id}`);\n          if (!evoRes.ok) return {\n            ...p,\n            evolutions: []\n          };\n          const evoData = await evoRes.json();\n          return {\n            ...p,\n            evolutions: evoData.evolve || []\n          };\n        } catch {\n          return {\n            ...p,\n            evolutions: []\n          };\n        }\n      }));\n      setPokemons(withEvolutions);\n    } catch (err) {\n      console.error(\"Erro ao buscar pokemons:\", err.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  fetchPokemonsEvolve();\n}, []);\n\n//   <PokeEvolveFrame>\n//     {pokemon.evolves ? \"Evolui\" : \"Não evolui\"}\n\n//     <PokemonImageEvo>\n//       src={`http://localhost:8000/evolve/${pokemon.id}/?${pokemon.evolves}, evlove.number/img`}\n//       alt={pokemon.name}\n//     </PokemonImageEvo>\n\n//   </PokeEvolveFrame>\n\nexport default EvolvePokemons;","map":{"version":3,"names":["useEffect","useState","styled","keyframes","PokeEvolveFrame","div","PokemonImageEvo","img","spin","Spinner","fetchPokemonsEvolve","response","fetch","data","json","withEvolutions","Promise","all","map","p","evoRes","id","ok","evolutions","evoData","evolve","setPokemons","err","console","error","message","setLoading","EvolvePokemons"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/EvolvePokemons/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\n\r\n\r\nconst PokeEvolveFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: \"6px\";\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\nconst PokemonImageEvo = styled.img`\r\n  width: 20px;\r\n  height: 20px; \r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchPokemonsEvolve() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8000/home\");\r\n        const data = await response.json();\r\n\r\n        // carrega evoluções de cada pokemon\r\n        const withEvolutions = await Promise.all(\r\n          data.map(async (p) => {\r\n            try {\r\n              const evoRes = await fetch(`http://localhost:8000/evolve/${p.id}`);\r\n              if (!evoRes.ok) return { ...p, evolutions: [] };\r\n              const evoData = await evoRes.json();\r\n              return { ...p, evolutions: evoData.evolve || [] };\r\n            } catch {\r\n              return { ...p, evolutions: [] };\r\n            }\r\n          })\r\n        );\r\n\r\n        setPokemons(withEvolutions);\r\n      } catch (err) {\r\n        console.error(\"Erro ao buscar pokemons:\", err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchPokemonsEvolve();\r\n  }, []);\r\n\r\n\r\n        //   <PokeEvolveFrame>\r\n        //     {pokemon.evolves ? \"Evolui\" : \"Não evolui\"}\r\n\r\n        //     <PokemonImageEvo>\r\n        //       src={`http://localhost:8000/evolve/${pokemon.id}/?${pokemon.evolves}, evlove.number/img`}\r\n        //       alt={pokemon.name}\r\n        //     </PokemonImageEvo>\r\n\r\n        //   </PokeEvolveFrame>\r\n\r\n\r\n\r\nexport default EvolvePokemons;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAIrD,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMC,eAAe,GAAGJ,MAAM,CAACK,GAAG;AAClC;AACA;AACA,CAAC;AAED,MAAMC,IAAI,GAAGL,SAAS;AACtB;AACA;AACA,CAAC;AAED,MAAMM,OAAO,GAAGP,MAAM,CAACG,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAeG,IAAI;AACnB;AACA,CAAC;AAGCR,SAAS,CAAC,MAAM;EACd,eAAeU,mBAAmBA,CAAA,EAAG;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACtCJ,IAAI,CAACK,GAAG,CAAC,MAAOC,CAAC,IAAK;QACpB,IAAI;UACF,MAAMC,MAAM,GAAG,MAAMR,KAAK,CAAC,gCAAgCO,CAAC,CAACE,EAAE,EAAE,CAAC;UAClE,IAAI,CAACD,MAAM,CAACE,EAAE,EAAE,OAAO;YAAE,GAAGH,CAAC;YAAEI,UAAU,EAAE;UAAG,CAAC;UAC/C,MAAMC,OAAO,GAAG,MAAMJ,MAAM,CAACN,IAAI,CAAC,CAAC;UACnC,OAAO;YAAE,GAAGK,CAAC;YAAEI,UAAU,EAAEC,OAAO,CAACC,MAAM,IAAI;UAAG,CAAC;QACnD,CAAC,CAAC,MAAM;UACN,OAAO;YAAE,GAAGN,CAAC;YAAEI,UAAU,EAAE;UAAG,CAAC;QACjC;MACF,CAAC,CACH,CAAC;MAEDG,WAAW,CAACX,cAAc,CAAC;IAC7B,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAACG,OAAO,CAAC;IACxD,CAAC,SAAS;MACRC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EACArB,mBAAmB,CAAC,CAAC;AACvB,CAAC,EAAE,EAAE,CAAC;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIR,eAAesB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
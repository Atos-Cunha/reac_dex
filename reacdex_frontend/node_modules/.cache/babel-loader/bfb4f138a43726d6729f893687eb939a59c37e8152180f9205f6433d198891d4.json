{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\HomePokemons\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FrameCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto; \n  border-radius: 10px;\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\n\n\n  // border: 2px solid #ccc;\n`;\n_c = FrameCard;\nconst PokemonCard = styled.div`\n  // border: 2px solid #ccc;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 80%;  \n  heigth: auto;\n  padding: 15px;\n  margin: 5px;\n  border-radius: 10px;\n  background: #fff;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n`;\n_c2 = PokemonCard;\nconst PokeNumber = styled.p`\n  // border: 2px solid #ccc;\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c3 = PokeNumber;\nconst PokemonImage = styled.img`\n  // border: 2px solid #ccc;\n  height: 200px;  \n  width: 200px;\n`;\n_c4 = PokemonImage;\nconst PokeName = styled.p`\n  // border: 2px solid #ccc;\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c5 = PokeName;\nconst PokemonImageTypeFrame = styled.div`\n  // border: 2px solid #ccc;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c6 = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 30px;\n  height: 30px; \n`;\n_c7 = PokemonImageType;\nconst PokemonEvoGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 10px;\n  border-radius: 5px;\n  // border: 2px solid #ccc;\n`;\n_c8 = PokemonEvoGrid;\nconst EvolveCard = styled.div`\n  // border: 2px solid #ccc;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n\n  padding: 10px;\n  heigth: 50px;\n  width: 100px;\n`;\n_c9 = EvolveCard;\nconst PokeImgEvo = styled.img`\n  width: 40px;\n  height: 40px; \n`;\n_c0 = PokeImgEvo;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n_c1 = Spinner;\nfunction normalizeNumber(num) {\n  if (!num) return \"\";\n  return String(num).padStart(3, \"0\");\n}\n\n// Extrai a chave/ID do Pokémon vindo da API de /home\nfunction pokeKeyFromHome(pokemon) {\n  var _ref, _pokemon$id;\n  // se vier como \"id\", usa direto; se vier como \"number\", normaliza\n  return normalizeNumber((_ref = (_pokemon$id = pokemon === null || pokemon === void 0 ? void 0 : pokemon.id) !== null && _pokemon$id !== void 0 ? _pokemon$id : pokemon === null || pokemon === void 0 ? void 0 : pokemon.number) !== null && _ref !== void 0 ? _ref : \"\");\n}\n\n// Retorna o número formatado para usar no src da imagem\nfunction imageIdForSrc(pokemon) {\n  // se passar um objeto, pega id/number; se passar string/num, normaliza direto\n  if (typeof pokemon === \"object\") {\n    var _ref2, _pokemon$id2;\n    return normalizeNumber((_ref2 = (_pokemon$id2 = pokemon === null || pokemon === void 0 ? void 0 : pokemon.id) !== null && _pokemon$id2 !== void 0 ? _pokemon$id2 : pokemon === null || pokemon === void 0 ? void 0 : pokemon.number) !== null && _ref2 !== void 0 ? _ref2 : \"\");\n  }\n  return normalizeNumber(pokemon);\n}\nfunction HomePokemons() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [evolves, setEvolves] = useState([]);\n  const [pokemonstype, setPokemonsType] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([fetch(\"http://localhost:8000/home\"), fetch(\"http://localhost:8000/types\"), fetch(\"http://localhost:8000/evolves\")]);\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\n        const pokemonsData = await resPokemons.json();\n        const typesData = await resTypes.json();\n        const evolvesData = await resEvolves.json();\n        setPokemons(pokemonsData || []);\n        setPokemonsType(typesData || []);\n        setEvolves(evolvesData || []);\n      } catch (err) {\n        console.error(\"Falha no fetch:\", err.message);\n        setPokemons([]);\n        setPokemonsType([]);\n        setEvolves([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 23\n  }, this);\n  if (!(pokemons !== null && pokemons !== void 0 && pokemons.length)) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 33\n  }, this);\n  if (!(pokemonstype !== null && pokemonstype !== void 0 && pokemonstype.length)) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 37\n  }, this);\n  if (!(evolves !== null && evolves !== void 0 && evolves.length)) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 32\n  }, this);\n  const evoGroups = [];\n  for (const chain of evolves || []) {\n    var _chain$pokemon, _chain$pokemon2;\n    const fullLine = [{\n      number: chain === null || chain === void 0 ? void 0 : (_chain$pokemon = chain.pokemon) === null || _chain$pokemon === void 0 ? void 0 : _chain$pokemon.number,\n      name: chain === null || chain === void 0 ? void 0 : (_chain$pokemon2 = chain.pokemon) === null || _chain$pokemon2 === void 0 ? void 0 : _chain$pokemon2.name\n    }, ...((chain === null || chain === void 0 ? void 0 : chain.evolve) || [])].filter(x => x && x.number);\n    const group = fullLine.map(ev => pokemons.find(p => pokeKeyFromHome(p) === normalizeNumber(ev.number))).filter(Boolean);\n    if (group.length > 0) {\n      evoGroups.push(group);\n    }\n  }\n  const covered = new Set(evoGroups.flat().map(p => pokeKeyFromHome(p)).filter(Boolean));\n  const singles = pokemons.filter(p => {\n    const key = pokeKeyFromHome(p);\n    return key && !covered.has(key);\n  });\n  for (const single of singles) {\n    evoGroups.push([single]);\n  }\n  return /*#__PURE__*/_jsxDEV(FrameCard, {\n    children: pokemons.map(pokemon => {\n      var _pokemon$id3, _pokemon$id4;\n      return /*#__PURE__*/_jsxDEV(PokemonCard, {\n        children: [/*#__PURE__*/_jsxDEV(PokeNumber, {\n          children: [\"#\", (_pokemon$id4 = pokemon.id) !== null && _pokemon$id4 !== void 0 ? _pokemon$id4 : pokemon.number || \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PokemonImage, {\n          src: pokemon.image || `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PokeName, {\n          children: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n          children: (Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n            src: `http://localhost:8000/types/${encodeURIComponent(type)}.png`,\n            alt: String(type)\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), evoGroups.map((group, idx) => {\n          var _pokemon$id5;\n          return /*#__PURE__*/_jsxDEV(PokemonEvoGrid, {\n            children: group.map(pokemon => {\n              var _pokemon$id6;\n              return /*#__PURE__*/_jsxDEV(EvolveCard, {\n                children: /*#__PURE__*/_jsxDEV(PokeImgEvo, {\n                  src: pokemon.image || `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)\n              }, (_pokemon$id6 = pokemon.id) !== null && _pokemon$id6 !== void 0 ? _pokemon$id6 : pokemon.number, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this);\n            })\n          }, (_pokemon$id5 = pokemon.id) !== null && _pokemon$id5 !== void 0 ? _pokemon$id5 : pokemon.number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this);\n        })]\n      }, (_pokemon$id3 = pokemon.id) !== null && _pokemon$id3 !== void 0 ? _pokemon$id3 : pokemon.number, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePokemons, \"ZnE0jgmFQ1Y/BptpTjFefOkr0pw=\");\n_c10 = HomePokemons;\nexport default HomePokemons;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10;\n$RefreshReg$(_c, \"FrameCard\");\n$RefreshReg$(_c2, \"PokemonCard\");\n$RefreshReg$(_c3, \"PokeNumber\");\n$RefreshReg$(_c4, \"PokemonImage\");\n$RefreshReg$(_c5, \"PokeName\");\n$RefreshReg$(_c6, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c7, \"PokemonImageType\");\n$RefreshReg$(_c8, \"PokemonEvoGrid\");\n$RefreshReg$(_c9, \"EvolveCard\");\n$RefreshReg$(_c0, \"PokeImgEvo\");\n$RefreshReg$(_c1, \"Spinner\");\n$RefreshReg$(_c10, \"HomePokemons\");","map":{"version":3,"names":["React","useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","FrameCard","div","_c","PokemonCard","_c2","PokeNumber","p","_c3","PokemonImage","img","_c4","PokeName","_c5","PokemonImageTypeFrame","_c6","PokemonImageType","_c7","PokemonEvoGrid","_c8","EvolveCard","_c9","PokeImgEvo","_c0","spin","Spinner","_c1","normalizeNumber","num","String","padStart","pokeKeyFromHome","pokemon","_ref","_pokemon$id","id","number","imageIdForSrc","_ref2","_pokemon$id2","HomePokemons","_s","pokemons","setPokemons","evolves","setEvolves","pokemonstype","setPokemonsType","loading","setLoading","fetchData","resPokemons","resTypes","resEvolves","Promise","all","fetch","ok","Error","pokemonsData","json","typesData","evolvesData","err","console","error","message","fileName","_jsxFileName","lineNumber","columnNumber","length","evoGroups","chain","_chain$pokemon","_chain$pokemon2","fullLine","name","evolve","filter","x","group","map","ev","find","Boolean","push","covered","Set","flat","singles","key","has","single","children","_pokemon$id3","_pokemon$id4","src","image","alt","Array","isArray","type","slice","encodeURIComponent","idx","_pokemon$id5","_pokemon$id6","_c10","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/HomePokemons/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\n\r\nconst FrameCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto; \r\n  border-radius: 10px;\r\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\r\n\r\n\r\n  // border: 2px solid #ccc;\r\n`;\r\n\r\nconst PokemonCard = styled.div`\r\n  // border: 2px solid #ccc;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80%;  \r\n  heigth: auto;\r\n  padding: 15px;\r\n  margin: 5px;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst PokeNumber = styled.p`\r\n  // border: 2px solid #ccc;\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImage = styled.img`\r\n  // border: 2px solid #ccc;\r\n  height: 200px;  \r\n  width: 200px;\r\n`;\r\n\r\nconst PokeName = styled.p`\r\n  // border: 2px solid #ccc;\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  // border: 2px solid #ccc;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 30px;\r\n  height: 30px; \r\n`;\r\n\r\nconst PokemonEvoGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  // border: 2px solid #ccc;\r\n`;\r\n\r\nconst EvolveCard = styled.div`\r\n  // border: 2px solid #ccc;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  padding: 10px;\r\n  heigth: 50px;\r\n  width: 100px;\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 40px;\r\n  height: 40px; \r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\nfunction normalizeNumber(num) {\r\n  if (!num) return \"\";\r\n  return String(num).padStart(3, \"0\");\r\n}\r\n\r\n// Extrai a chave/ID do Pokémon vindo da API de /home\r\nfunction pokeKeyFromHome(pokemon) {\r\n  // se vier como \"id\", usa direto; se vier como \"number\", normaliza\r\n  return normalizeNumber(pokemon?.id ?? pokemon?.number ?? \"\");\r\n}\r\n\r\n// Retorna o número formatado para usar no src da imagem\r\nfunction imageIdForSrc(pokemon) {\r\n  // se passar um objeto, pega id/number; se passar string/num, normaliza direto\r\n  if (typeof pokemon === \"object\") {\r\n    return normalizeNumber(pokemon?.id ?? pokemon?.number ?? \"\");\r\n  }\r\n  return normalizeNumber(pokemon);\r\n}\r\n\r\nfunction HomePokemons() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [pokemonstype, setPokemonsType] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([\r\n          fetch(\"http://localhost:8000/home\"),\r\n          fetch(\"http://localhost:8000/types\"),\r\n          fetch(\"http://localhost:8000/evolves\"),\r\n        ]);\r\n\r\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\r\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\r\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\r\n\r\n        const pokemonsData = await resPokemons.json();\r\n        const typesData = await resTypes.json();\r\n        const evolvesData = await resEvolves.json();\r\n\r\n        setPokemons(pokemonsData || []);\r\n        setPokemonsType(typesData || []);\r\n        setEvolves(evolvesData || []);\r\n      } catch (err) {\r\n        console.error(\"Falha no fetch:\", err.message);\r\n        setPokemons([]);\r\n        setPokemonsType([]);\r\n        setEvolves([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (!pokemons?.length) return <Spinner />;\r\n  if (!pokemonstype?.length) return <Spinner />;\r\n  if (!evolves?.length) return <Spinner />;\r\n\r\n  const evoGroups = [];\r\n\r\n  for (const chain of (evolves || [])) {\r\n    const fullLine = [\r\n      { number: chain?.pokemon?.number, name: chain?.pokemon?.name },\r\n      ...((chain?.evolve) || []),\r\n    ].filter(x => x && x.number);\r\n\r\n    const group = fullLine\r\n      .map(ev => pokemons.find(p => pokeKeyFromHome(p) === normalizeNumber(ev.number)))\r\n      .filter(Boolean);\r\n\r\n    if (group.length > 0) {\r\n      evoGroups.push(group);\r\n    }\r\n  }\r\n\r\n  const covered = new Set(\r\n    evoGroups.flat().map(p => pokeKeyFromHome(p)).filter(Boolean)\r\n  );\r\n\r\n  const singles = pokemons.filter(p => {\r\n    const key = pokeKeyFromHome(p);\r\n    return key && !covered.has(key);\r\n  });\r\n\r\n  for (const single of singles) {\r\n    evoGroups.push([single]);\r\n  }\r\n\r\n  return (\r\n    <FrameCard>\r\n      {pokemons.map((pokemon) => (\r\n        <PokemonCard key={pokemon.id ?? pokemon.number}>\r\n          <PokeNumber>#{pokemon.id ?? (pokemon.number || \"\")}</PokeNumber>\r\n\r\n          <PokemonImage\r\n            src={\r\n              pokemon.image ||\r\n              `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`\r\n            }\r\n            alt={pokemon.name}\r\n          />\r\n\r\n          <PokeName>{pokemon.name}</PokeName>\r\n\r\n          <PokemonImageTypeFrame>\r\n            {(Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type])\r\n              .filter(Boolean)\r\n              .map((type) => (\r\n                <PokemonImageType\r\n                  key={type}\r\n                  src={`http://localhost:8000/types/${encodeURIComponent(type)}.png`}\r\n                  alt={String(type)}\r\n                />\r\n              ))}\r\n          </PokemonImageTypeFrame>\r\n\r\n          {evoGroups.map((group, idx) => (\r\n            < PokemonEvoGrid \r\n            key={pokemon.id ?? pokemon.number}\r\n            >\r\n              {group.map((pokemon) => (\r\n                <EvolveCard key={pokemon.id ?? pokemon.number}>\r\n                  <PokeImgEvo\r\n                    src={\r\n                      pokemon.image ||\r\n                      `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`\r\n                    }\r\n                  />\r\n                </EvolveCard>\r\n              ))\r\n              }\r\n            </PokemonEvoGrid>\r\n          ))}\r\n        </PokemonCard>\r\n\r\n      ))}\r\n    </FrameCard>\r\n  );\r\n}\r\n\r\nexport default HomePokemons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
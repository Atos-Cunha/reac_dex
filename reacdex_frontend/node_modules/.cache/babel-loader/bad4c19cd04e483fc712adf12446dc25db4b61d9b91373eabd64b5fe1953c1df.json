{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\Pesquisa\\\\index.js\",\n  _s = $RefreshSig$();\nimport styled, { keyframes } from \"styled-components\";\nimport { useEffect, useState } from 'react';\nimport Input from \"../Input\";\nimport { post_fav } from \"../../services/fav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PesquisaContainer = styled.section`\n  // background-image: linear-gradient(90deg, #08416cff 0%, #bde8fbff 100%);\n  // background-image: linear-gradient(90deg,#002F52 35%,#326589 165%);\n  background-color: #fff;\n  border-radius: 10px;\n  color: #FFF;\n  text-align: center;\n  padding: 40px 0;\n  width: 80%;\n  margin: auto;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\n  transition: all 0.3s ease;\n`;\n_c = PesquisaContainer;\nconst Titulo = styled.h2`\n  color: #FFF;\n  font-size: 36px;\n  text-align: center;\n  width: 100%;\n`;\n_c2 = Titulo;\nconst ResultadosGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); \n  max-width: 1000px;\n  margin: 20px auto;\n  gap: 20px;\n`;\n_c3 = ResultadosGrid;\nconst Resultado = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  padding: 10px;\n  border-radius: 12px;\n  text-align: center;\n  cursor: pointer;\n  transition: 0.2s;\n\n  p {\n    margin-top: 8px;\n    font-size: 14px;\n    color: #fff;\n  }\n\n  img {\n    width: 100px;\n    height: 100px;\n    object-fit: contain;\n  }\n  \n  &:hover {\n    border: 1px solid white;\n    transform: scale(1.05);\n  }\n`;\n_c4 = Resultado;\nconst PokemonImage = styled.img`\n  width: 200px;\n  height: 150px;\n`;\n_c5 = PokemonImage;\nconst spin = keyframes`\n0% { transform: rotate(0deg); } \n100% { transform: rotate(360deg); }\n `;\nconst Spinner = styled.div`\nborder: 6px solid #f3f3f3;\nborder-top: 6px solid #3498db;\nborder-radius: 50%;\nwidth: 60px;\nheight: 60px;\nanimation: ${spin} 1s linear infinite; margin: 50px auto;\n`;\n_c6 = Spinner;\nfunction Pesquisa() {\n  _s();\n  const [allPokemons, setAllPokemons] = useState([]); // todos os pokémons\n  const [pokemons, setPokemons] = useState([]); // resultados filtrados\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchPokemons() {\n      try {\n        const response = await fetch(\"http://localhost:8000/home\");\n        if (!response.ok) throw new Error(\"Erro ao buscar pokemons\");\n        const data = await response.json();\n        setAllPokemons(data); // guarda todos os pokémons, mas não mostra ainda\n      } catch (err) {\n        console.error(\"Falha no fetch:\", err.message);\n        setAllPokemons([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPokemons();\n  }, []);\n  async function insert_fav(id) {\n    await post_fav(id);\n    alert(`Item de id:${id} inserido!`);\n  }\n  function handleSearch(evento) {\n    const textoDigitado = evento.target.value;\n    if (textoDigitado.trim() === \"\") {\n      setPokemons([]); // se o campo estiver vazio, não mostra nada\n      return;\n    }\n    const resultadoPesquisa = allPokemons.filter(pokemon => {\n      var _pokemon$name;\n      return (_pokemon$name = pokemon.name) === null || _pokemon$name === void 0 ? void 0 : _pokemon$name.toLowerCase().includes(textoDigitado.toLowerCase());\n    });\n    setPokemons(resultadoPesquisa);\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(PesquisaContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Titulo, {\n      children: \"Pesquise por um pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Pesquise por nome\",\n      onChange: handleSearch // melhor usar onChange do que onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), pokemons.length > 0 && /*#__PURE__*/_jsxDEV(ResultadosGrid, {\n      children: pokemons.map(pokemon => /*#__PURE__*/_jsxDEV(Resultado, {\n        onClick: () => insert_fav(pokemon.id),\n        children: [/*#__PURE__*/_jsxDEV(PokemonImage, {\n          src: pokemon.image || `http://localhost:8000/home/${pokemon.id}/img`,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, pokemon.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Pesquisa, \"5rd4foLwJ7znDhBLEz5ttNWfAhA=\");\n_c7 = Pesquisa;\nexport default Pesquisa;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"PesquisaContainer\");\n$RefreshReg$(_c2, \"Titulo\");\n$RefreshReg$(_c3, \"ResultadosGrid\");\n$RefreshReg$(_c4, \"Resultado\");\n$RefreshReg$(_c5, \"PokemonImage\");\n$RefreshReg$(_c6, \"Spinner\");\n$RefreshReg$(_c7, \"Pesquisa\");","map":{"version":3,"names":["styled","keyframes","useEffect","useState","Input","post_fav","jsxDEV","_jsxDEV","PesquisaContainer","section","_c","Titulo","h2","_c2","ResultadosGrid","div","_c3","Resultado","_c4","PokemonImage","img","_c5","spin","Spinner","_c6","Pesquisa","_s","allPokemons","setAllPokemons","pokemons","setPokemons","loading","setLoading","fetchPokemons","response","fetch","ok","Error","data","json","err","console","error","message","insert_fav","id","alert","handleSearch","evento","textoDigitado","target","value","trim","resultadoPesquisa","filter","pokemon","_pokemon$name","name","toLowerCase","includes","fileName","_jsxFileName","lineNumber","columnNumber","children","placeholder","onChange","length","map","onClick","src","image","alt","_c7","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/Pesquisa/index.js"],"sourcesContent":["import styled, { keyframes } from \"styled-components\";\r\nimport { useEffect, useState } from 'react';\r\nimport Input from \"../Input\";\r\nimport { post_fav } from \"../../services/fav\";\r\n\r\nconst PesquisaContainer = styled.section`\r\n  // background-image: linear-gradient(90deg, #08416cff 0%, #bde8fbff 100%);\r\n  // background-image: linear-gradient(90deg,#002F52 35%,#326589 165%);\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  color: #FFF;\r\n  text-align: center;\r\n  padding: 40px 0;\r\n  width: 80%;\r\n  margin: auto;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\r\n  transition: all 0.3s ease;\r\n`;\r\n\r\nconst Titulo = styled.h2`\r\n  color: #FFF;\r\n  font-size: 36px;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst ResultadosGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); \r\n  max-width: 1000px;\r\n  margin: 20px auto;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Resultado = styled.div`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n\r\n  p {\r\n    margin-top: 8px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n\r\n  img {\r\n    width: 100px;\r\n    height: 100px;\r\n    object-fit: contain;\r\n  }\r\n  \r\n  &:hover {\r\n    border: 1px solid white;\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst PokemonImage = styled.img`\r\n  width: 200px;\r\n  height: 150px;\r\n`;\r\n\r\nconst spin = keyframes`\r\n0% { transform: rotate(0deg); } \r\n100% { transform: rotate(360deg); }\r\n `; \r\n \r\nconst Spinner = styled.div`\r\nborder: 6px solid #f3f3f3;\r\nborder-top: 6px solid #3498db;\r\nborder-radius: 50%;\r\nwidth: 60px;\r\nheight: 60px;\r\nanimation: ${spin} 1s linear infinite; margin: 50px auto;\r\n`; \r\nfunction Pesquisa() {\r\n  const [allPokemons, setAllPokemons] = useState([]); // todos os pokémons\r\n  const [pokemons, setPokemons] = useState([]);       // resultados filtrados\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchPokemons() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8000/home\");\r\n        if (!response.ok) throw new Error(\"Erro ao buscar pokemons\");\r\n        const data = await response.json();\r\n        setAllPokemons(data); // guarda todos os pokémons, mas não mostra ainda\r\n      } catch (err) {\r\n        console.error(\"Falha no fetch:\", err.message);\r\n        setAllPokemons([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchPokemons();\r\n  }, []);\r\n\r\n  async function insert_fav(id) {\r\n    await post_fav(id);\r\n    alert(`Item de id:${id} inserido!`);\r\n  }\r\n\r\n  function handleSearch(evento) {\r\n    const textoDigitado = evento.target.value;\r\n    if (textoDigitado.trim() === \"\") {\r\n      setPokemons([]); // se o campo estiver vazio, não mostra nada\r\n      return;\r\n    }\r\n\r\n    const resultadoPesquisa = allPokemons.filter(pokemon =>\r\n      pokemon.name?.toLowerCase().includes(textoDigitado.toLowerCase())\r\n    );\r\n    setPokemons(resultadoPesquisa);\r\n  }\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <PesquisaContainer>\r\n      <Titulo>Pesquise por um pokemon</Titulo>\r\n      <Input\r\n        placeholder=\"Pesquise por nome\"\r\n        onChange={handleSearch} // melhor usar onChange do que onBlur\r\n      />\r\n\r\n      {pokemons.length > 0 && (\r\n        <ResultadosGrid>\r\n          {pokemons.map(pokemon => (\r\n            <Resultado key={pokemon.id} onClick={() => insert_fav(pokemon.id)}>\r\n              <PokemonImage\r\n                src={pokemon.image || `http://localhost:8000/home/${pokemon.id}/img`}\r\n                alt={pokemon.name}\r\n              />\r\n              <p>{pokemon.name}</p>\r\n            </Resultado>\r\n          ))}\r\n        </ResultadosGrid>\r\n      )}\r\n    </PesquisaContainer>\r\n  );\r\n}\r\n\r\nexport default Pesquisa;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
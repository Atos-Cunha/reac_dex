{"ast":null,"code":"function handleSearch(evento) {\n  const textoDigitado = evento.target.value;\n  if (textoDigitado.trim() === \"\") {\n    setPokemons([]);\n    return;\n  }\n  let resultadoPesquisa = allPokemons.filter(pokemon => {\n    var _pokemon$name;\n    return (_pokemon$name = pokemon.name) === null || _pokemon$name === void 0 ? void 0 : _pokemon$name.toLowerCase().includes(textoDigitado.toLowerCase());\n  });\n  if (evolves && resultadoPesquisa.length > 0) {\n    // pega o primeiro resultado da pesquisa\n    const pokemonBase = resultadoPesquisa[0];\n\n    // busca as evoluções na API\n    fetch(`http://localhost:8000/evolve/${pokemonBase.id}`).then(res => res.json()).then(data => {\n      // monta o array com o pokemon base + evoluções\n      const evolucaoCompleta = [{\n        id: pokemonBase.id,\n        name: pokemonBase.name,\n        image: pokemonBase.image\n      }, ...(data.evolve || []).map(ev => ({\n        id: ev.number,\n        name: ev.name,\n        image: `http://localhost:8000/home/${ev.number}/img`\n      }))];\n      setPokemons(evolucaoCompleta);\n    }).catch(err => {\n      console.error(\"Erro ao buscar evoluções:\", err);\n      setPokemons(resultadoPesquisa); // fallback\n    });\n  } else {\n    setPokemons(resultadoPesquisa);\n  }\n}","map":{"version":3,"names":["handleSearch","evento","textoDigitado","target","value","trim","setPokemons","resultadoPesquisa","allPokemons","filter","pokemon","_pokemon$name","name","toLowerCase","includes","evolves","length","pokemonBase","fetch","id","then","res","json","data","evolucaoCompleta","image","evolve","map","ev","number","catch","err","console","error"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/Pesquisa/index.js"],"sourcesContent":["function handleSearch(evento) {\r\n  const textoDigitado = evento.target.value;\r\n  if (textoDigitado.trim() === \"\") {\r\n    setPokemons([]);\r\n    return;\r\n  }\r\n\r\n  let resultadoPesquisa = allPokemons.filter(pokemon =>\r\n    pokemon.name?.toLowerCase().includes(textoDigitado.toLowerCase())\r\n  );\r\n\r\n  if (evolves && resultadoPesquisa.length > 0) {\r\n    // pega o primeiro resultado da pesquisa\r\n    const pokemonBase = resultadoPesquisa[0];\r\n\r\n    // busca as evoluções na API\r\n    fetch(`http://localhost:8000/evolve/${pokemonBase.id}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // monta o array com o pokemon base + evoluções\r\n        const evolucaoCompleta = [\r\n          { id: pokemonBase.id, name: pokemonBase.name, image: pokemonBase.image },\r\n          ...(data.evolve || []).map(ev => ({\r\n            id: ev.number,\r\n            name: ev.name,\r\n            image: `http://localhost:8000/home/${ev.number}/img`\r\n          }))\r\n        ];\r\n        setPokemons(evolucaoCompleta);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Erro ao buscar evoluções:\", err);\r\n        setPokemons(resultadoPesquisa); // fallback\r\n      });\r\n  } else {\r\n    setPokemons(resultadoPesquisa);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAYA,CAACC,MAAM,EAAE;EAC5B,MAAMC,aAAa,GAAGD,MAAM,CAACE,MAAM,CAACC,KAAK;EACzC,IAAIF,aAAa,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/BC,WAAW,CAAC,EAAE,CAAC;IACf;EACF;EAEA,IAAIC,iBAAiB,GAAGC,WAAW,CAACC,MAAM,CAACC,OAAO;IAAA,IAAAC,aAAA;IAAA,QAAAA,aAAA,GAChDD,OAAO,CAACE,IAAI,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,aAAa,CAACW,WAAW,CAAC,CAAC,CAAC;EAAA,CACnE,CAAC;EAED,IAAIE,OAAO,IAAIR,iBAAiB,CAACS,MAAM,GAAG,CAAC,EAAE;IAC3C;IACA,MAAMC,WAAW,GAAGV,iBAAiB,CAAC,CAAC,CAAC;;IAExC;IACAW,KAAK,CAAC,gCAAgCD,WAAW,CAACE,EAAE,EAAE,CAAC,CACpDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ;MACA,MAAMC,gBAAgB,GAAG,CACvB;QAAEL,EAAE,EAAEF,WAAW,CAACE,EAAE;QAAEP,IAAI,EAAEK,WAAW,CAACL,IAAI;QAAEa,KAAK,EAAER,WAAW,CAACQ;MAAM,CAAC,EACxE,GAAG,CAACF,IAAI,CAACG,MAAM,IAAI,EAAE,EAAEC,GAAG,CAACC,EAAE,KAAK;QAChCT,EAAE,EAAES,EAAE,CAACC,MAAM;QACbjB,IAAI,EAAEgB,EAAE,CAAChB,IAAI;QACba,KAAK,EAAE,8BAA8BG,EAAE,CAACC,MAAM;MAChD,CAAC,CAAC,CAAC,CACJ;MACDvB,WAAW,CAACkB,gBAAgB,CAAC;IAC/B,CAAC,CAAC,CACDM,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC/CzB,WAAW,CAACC,iBAAiB,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC;EACN,CAAC,MAAM;IACLD,WAAW,CAACC,iBAAiB,CAAC;EAChC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\EvolvePokemons\\\\index.js\";\nimport { useEffect, useState } from 'react';\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokeEvolveFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: \"6px\";\n  padding: 15px;\n  margin: 5px;\n`;\n_c = PokeEvolveFrame;\nconst PokemonImageEvo = styled.img`\n  width: 20px;\n  height: 20px; \n`;\n_c2 = PokemonImageEvo;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\nuseEffect(() => {\n  async function fetchPokemonsEvolve() {\n    try {\n      const response = await fetch(\"http://localhost:8000/home\");\n      const data = await response.json();\n\n      // carrega evoluções de cada pokemon\n      const withEvolutions = await Promise.all(data.map(async p => {\n        try {\n          const evoRes = await fetch(`http://localhost:8000/evolve/${p.id}`);\n          if (!evoRes.ok) return {\n            ...p,\n            evolutions: []\n          };\n          const evoData = await evoRes.json();\n          return {\n            ...p,\n            evolutions: evoData.evolve || []\n          };\n        } catch {\n          return {\n            ...p,\n            evolutions: []\n          };\n        }\n      }));\n      setPokemons(withEvolutions);\n    } catch (err) {\n      console.error(\"Erro ao buscar pokemons:\", err.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  fetchPokemonsEvolve();\n}, []);\n/*#__PURE__*/_jsxDEV(PokeEvolveFrame, {\n  children: [pokemon.evolves ? \"Evolui\" : \"Não evolui\", /*#__PURE__*/_jsxDEV(PokemonImageEvo, {\n    children: [\"src=\", `http://localhost:8000/evolve/${pokemon.id}/?${pokemon.evolves}, evlove.number/img`, \"alt=\", pokemon.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 3\n}, this);\nexport default EvolvePokemons;\nvar _c, _c2;\n$RefreshReg$(_c, \"PokeEvolveFrame\");\n$RefreshReg$(_c2, \"PokemonImageEvo\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","PokeEvolveFrame","div","_c","PokemonImageEvo","img","_c2","spin","Spinner","fetchPokemonsEvolve","response","fetch","data","json","withEvolutions","Promise","all","map","p","evoRes","id","ok","evolutions","evoData","evolve","setPokemons","err","console","error","message","setLoading","children","pokemon","evolves","name","fileName","_jsxFileName","lineNumber","columnNumber","EvolvePokemons","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/EvolvePokemons/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst PokeEvolveFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: \"6px\";\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\nconst PokemonImageEvo = styled.img`\r\n  width: 20px;\r\n  height: 20px; \r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\n\r\nuseEffect(() => {\r\n    async function fetchPokemonsEvolve() {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/home\");\r\n            const data = await response.json();\r\n\r\n            // carrega evoluções de cada pokemon\r\n            const withEvolutions = await Promise.all(\r\n                data.map(async (p) => {\r\n                    try {\r\n                        const evoRes = await fetch(`http://localhost:8000/evolve/${p.id}`);\r\n                        if (!evoRes.ok) return { ...p, evolutions: [] };\r\n                        const evoData = await evoRes.json();\r\n                        return { ...p, evolutions: evoData.evolve || [] };\r\n                    } catch {\r\n                        return { ...p, evolutions: [] };\r\n                    }\r\n                })\r\n            );\r\n\r\n            setPokemons(withEvolutions);\r\n        } catch (err) {\r\n            console.error(\"Erro ao buscar pokemons:\", err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    fetchPokemonsEvolve();\r\n}, []);\r\n\r\n\r\n  <PokeEvolveFrame>\r\n    {pokemon.evolves ? \"Evolui\" : \"Não evolui\"}\r\n\r\n    <PokemonImageEvo>\r\n      src={`http://localhost:8000/evolve/${pokemon.id}/?${pokemon.evolves}, evlove.number/img`}\r\n      alt={pokemon.name}\r\n    </PokemonImageEvo>\r\n\r\n  </PokeEvolveFrame>\r\n\r\n\r\n\r\nexport default EvolvePokemons;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,eAAe,GAAGJ,MAAM,CAACK,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIF,eAAe;AAUrB,MAAMG,eAAe,GAAGP,MAAM,CAACQ,GAAG;AAClC;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,eAAe;AAKrB,MAAMG,IAAI,GAAGT,SAAS;AACtB;AACA;AACA,CAAC;AAED,MAAMU,OAAO,GAAGX,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAeK,IAAI;AACnB;AACA,CAAC;AAGDZ,SAAS,CAAC,MAAM;EACZ,eAAec,mBAAmBA,CAAA,EAAG;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACpCJ,IAAI,CAACK,GAAG,CAAC,MAAOC,CAAC,IAAK;QAClB,IAAI;UACA,MAAMC,MAAM,GAAG,MAAMR,KAAK,CAAC,gCAAgCO,CAAC,CAACE,EAAE,EAAE,CAAC;UAClE,IAAI,CAACD,MAAM,CAACE,EAAE,EAAE,OAAO;YAAE,GAAGH,CAAC;YAAEI,UAAU,EAAE;UAAG,CAAC;UAC/C,MAAMC,OAAO,GAAG,MAAMJ,MAAM,CAACN,IAAI,CAAC,CAAC;UACnC,OAAO;YAAE,GAAGK,CAAC;YAAEI,UAAU,EAAEC,OAAO,CAACC,MAAM,IAAI;UAAG,CAAC;QACrD,CAAC,CAAC,MAAM;UACJ,OAAO;YAAE,GAAGN,CAAC;YAAEI,UAAU,EAAE;UAAG,CAAC;QACnC;MACJ,CAAC,CACL,CAAC;MAEDG,WAAW,CAACX,cAAc,CAAC;IAC/B,CAAC,CAAC,OAAOY,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAACG,OAAO,CAAC;IAC1D,CAAC,SAAS;MACNC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ;EACArB,mBAAmB,CAAC,CAAC;AACzB,CAAC,EAAE,EAAE,CAAC;AAGJ,aAAAT,OAAA,CAACC,eAAe;EAAA8B,QAAA,GACbC,OAAO,CAACC,OAAO,GAAG,QAAQ,GAAG,YAAY,eAE1CjC,OAAA,CAACI,eAAe;IAAA2B,QAAA,GAAC,MACX,EAAC,gCAAgCC,OAAO,CAACZ,EAAE,KAAKY,OAAO,CAACC,OAAO,qBAAqB,EAAC,MACrF,EAACD,OAAO,CAACE,IAAI;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAEH,CAAC;AAIpB,eAAeC,cAAc;AAAC,IAAApC,EAAA,EAAAG,GAAA;AAAAkC,YAAA,CAAArC,EAAA;AAAAqC,YAAA,CAAAlC,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
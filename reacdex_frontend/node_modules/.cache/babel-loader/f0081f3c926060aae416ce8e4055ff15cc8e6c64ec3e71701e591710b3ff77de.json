{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\routes\\\\Types.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 6px;\n  margin-top: 8px;\n`;\n_c = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n`;\n\n// utilitário para src\n_c2 = PokemonImageType;\nconst imageIdForSrc = pokemon => {\n  var _pokemon$id;\n  return (_pokemon$id = pokemon.id) !== null && _pokemon$id !== void 0 ? _pokemon$id : pokemon.number;\n};\nfunction Types() {\n  _s();\n  const [types, setTypes] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/types\") // rota backend\n    .then(res => res.json()).then(data => setTypes(data)).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Evolu\\xE7\\xF5es por Grupo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: type.chain && /*#__PURE__*/_jsxDEV(PokemonEvoGrid, {\n        children: type.chain.map(ev => {\n          var _ev$id;\n          return /*#__PURE__*/_jsxDEV(EvolveCard, {\n            children: [/*#__PURE__*/_jsxDEV(PokeImgEvo, {\n              src: ev.image || `http://localhost:8000/home/${imageIdForSrc(ev)}/img`,\n              alt: ev.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n              children: (Array.isArray(ev.type) ? ev.type.slice(0, 2) : [ev.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n                src: `http://localhost:8000/types/${encodeURIComponent(type)}.png`,\n                alt: String(type)\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this)]\n          }, (_ev$id = ev.id) !== null && _ev$id !== void 0 ? _ev$id : ev.number, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, type.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Types, \"KbbD0RQTCnu9UyxZuGxyOo5eB1I=\");\n_c3 = Types;\nexport default Types;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c2, \"PokemonImageType\");\n$RefreshReg$(_c3, \"Types\");","map":{"version":3,"names":["useEffect","useState","styled","jsxDEV","_jsxDEV","PokemonImageTypeFrame","div","_c","PokemonImageType","img","_c2","imageIdForSrc","pokemon","_pokemon$id","id","number","Types","_s","types","setTypes","fetch","then","res","json","data","catch","err","console","error","style","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","type","chain","PokemonEvoGrid","ev","_ev$id","EvolveCard","PokeImgEvo","src","image","alt","name","Array","isArray","slice","filter","Boolean","encodeURIComponent","String","_c3","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/routes/Types.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 6px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  object-fit: contain;\r\n`;\r\n\r\n// utilitário para src\r\nconst imageIdForSrc = (pokemon) => {\r\n  return pokemon.id ?? pokemon.number;\r\n};\r\n\r\nfunction Types() {\r\n  const [types, setTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/types\") // rota backend\r\n      .then((res) => res.json())\r\n      .then((data) => setTypes(data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1 style={{ textAlign: \"center\" }}>Evoluções por Grupo</h1>\r\n\r\n      {types.map((type) => (\r\n        <div key={type.name}>\r\n          \r\n\r\n          {type.chain && (\r\n            <PokemonEvoGrid>\r\n              {type.chain.map((ev) => (\r\n                <EvolveCard key={ev.id ?? ev.number}>\r\n                  <PokeImgEvo\r\n                    src={\r\n                      ev.image ||\r\n                      `http://localhost:8000/home/${imageIdForSrc(ev)}/img`\r\n                    }\r\n                    alt={ev.name}\r\n                  />\r\n\r\n                  {/* tipos do Pokémon */}\r\n                  <PokemonImageTypeFrame>\r\n                    {(Array.isArray(ev.type) ? ev.type.slice(0, 2) : [ev.type])\r\n                      .filter(Boolean)\r\n                      .map((type) => (\r\n                        <PokemonImageType\r\n                          key={type}\r\n                          src={`http://localhost:8000/types/${encodeURIComponent(type)}.png`}\r\n                          alt={String(type)}\r\n                        />\r\n                      ))}\r\n                  </PokemonImageTypeFrame>\r\n                </EvolveCard>\r\n              ))}\r\n            </PokemonEvoGrid>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Types;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
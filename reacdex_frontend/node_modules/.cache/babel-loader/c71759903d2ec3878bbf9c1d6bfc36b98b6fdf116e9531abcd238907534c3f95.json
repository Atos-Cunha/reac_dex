{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\CardPokemons\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  height: auto;\n  margin: 0 auto; \n  background-color: #e3f5fd;\n  border-radius: 10px;\n  display: flex;\n  justify-content: flex-start; /* aproxima os cards */\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 10px; /* distância entre os cards */\n  padding: 15px;\n`;\n_c = Card;\nconst PokemonCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  margin: 3px; /* menos espaçamento */\n  border-radius: 10px;\n  background: #ffffff;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.25); /* sombra maior */\n  transition: transform 0.2s, box-shadow 0.2s;\n  \n  /* destaque ao passar o mouse */\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 18px rgba(0,0,0,0.35);\n  }\n`;\nconst PokemonCardHighlighted = styled(PokemonCard)`\n  background: #d0f0ff;\n  border: 2px solid #3498db;\n`;\nconst PokeNumber = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\nconst PokemonImage = styled.img`\n  height: 200px;  \n  width: 200px;\n`;\nconst PokeName = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 5px;\n`;\nconst PokemonImageType = styled.img`\n  width: 30px;\n  height: 30px; \n`;\nconst EvoLine = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  // margin-top: 8px;\n`;\nconst PokeImgEvo = styled.img`\n  width: 35px;\n  height: 35px; \n`;\nconst Arrow = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n`;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n\n/* helper para normalizar '#001' / '001' / 1 -> '1' (string) */\n_c2 = Spinner;\nfunction normalizeNumber(value) {\n  if (value === undefined || value === null) return null;\n  const s = String(value);\n  const digits = s.replace(/\\D/g, \"\");\n  if (!digits) return null;\n  // remove zeros à esquerda: parseInt -> '1' de '001'\n  return String(parseInt(digits, 10));\n}\n\n/* helper para montar src da imagem com fallback */\nfunction imageIdForSrc(obj) {\n  // tenta id (numérico) primeiro, senão number (raw), senão normalized digits\n  if (obj == null) return \"\";\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\n  if (obj.number) {\n    // se number já tiver formato utilizável, remova apenas o '#'\n    const raw = String(obj.number).replace(/^#/, \"\");\n    if (raw) return raw;\n  }\n  return normalizeNumber(obj.number) || \"\";\n}\nfunction CardPokemons() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [evolves, setEvolves] = useState([]);\n  const [pokemonstype, setPokemonsType] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([fetch(\"http://localhost:8000/home\"), fetch(\"http://localhost:8000/type\"), fetch(\"http://localhost:8000/evolve\")]);\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\n        const pokemonsData = await resPokemons.json();\n        const typesData = await resTypes.json();\n        const evolvesData = await resEvolves.json();\n        setPokemons(pokemonsData || []);\n        setPokemonsType(typesData || []);\n        setEvolves(evolvesData || []);\n\n        // descomente para debug rápido:\n        // console.log(\"pokemons\", pokemonsData);\n        // console.log(\"evolves\", evolvesData);\n      } catch (err) {\n        console.error(\"Falha no fetch:\", err.message);\n        setPokemons([]);\n        setPokemonsType([]);\n        setEvolves([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 23\n  }, this);\n  if (!pokemons || pokemons.length === 0) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 50\n  }, this);\n  if (!pokemonstype || pokemonstype.length === 0) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 58\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(CardPokemons, \"ZnE0jgmFQ1Y/BptpTjFefOkr0pw=\");\n_c3 = CardPokemons;\nexport default CardPokemons;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Spinner\");\n$RefreshReg$(_c3, \"CardPokemons\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","Card","div","_c","PokemonCard","PokemonCardHighlighted","PokeNumber","p","PokemonImage","img","PokeName","PokemonImageTypeFrame","PokemonImageType","EvoLine","PokeImgEvo","Arrow","span","spin","Spinner","_c2","normalizeNumber","value","undefined","s","String","digits","replace","parseInt","imageIdForSrc","obj","id","number","raw","CardPokemons","_s","pokemons","setPokemons","evolves","setEvolves","pokemonstype","setPokemonsType","loading","setLoading","fetchData","resPokemons","resTypes","resEvolves","Promise","all","fetch","ok","Error","pokemonsData","json","typesData","evolvesData","err","console","error","message","fileName","_jsxFileName","lineNumber","columnNumber","length","_c3","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/CardPokemons/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  height: auto;\r\n  margin: 0 auto; \r\n  background-color: #e3f5fd;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: flex-start; /* aproxima os cards */\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  gap: 10px; /* distância entre os cards */\r\n  padding: 15px;\r\n`;\r\n\r\nconst PokemonCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 15px;\r\n  margin: 3px; /* menos espaçamento */\r\n  border-radius: 10px;\r\n  background: #ffffff;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.25); /* sombra maior */\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n  \r\n  /* destaque ao passar o mouse */\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 18px rgba(0,0,0,0.35);\r\n  }\r\n`;\r\n\r\nconst PokemonCardHighlighted = styled(PokemonCard)`\r\n  background: #d0f0ff;\r\n  border: 2px solid #3498db;\r\n`;\r\n\r\nconst PokeNumber = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImage = styled.img`\r\n  height: 200px;  \r\n  width: 200px;\r\n`;\r\n\r\nconst PokeName = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 30px;\r\n  height: 30px; \r\n`;\r\n\r\nconst EvoLine = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n  // margin-top: 8px;\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 35px;\r\n  height: 35px; \r\n`;\r\n\r\nconst Arrow = styled.span`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\n/* helper para normalizar '#001' / '001' / 1 -> '1' (string) */\r\nfunction normalizeNumber(value) {\r\n  if (value === undefined || value === null) return null;\r\n  const s = String(value);\r\n  const digits = s.replace(/\\D/g, \"\");\r\n  if (!digits) return null;\r\n  // remove zeros à esquerda: parseInt -> '1' de '001'\r\n  return String(parseInt(digits, 10));\r\n}\r\n\r\n/* helper para montar src da imagem com fallback */\r\nfunction imageIdForSrc(obj) {\r\n  // tenta id (numérico) primeiro, senão number (raw), senão normalized digits\r\n  if (obj == null) return \"\";\r\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\r\n  if (obj.number) {\r\n    // se number já tiver formato utilizável, remova apenas o '#'\r\n    const raw = String(obj.number).replace(/^#/, \"\");\r\n    if (raw) return raw;\r\n  }\r\n  return normalizeNumber(obj.number) || \"\";\r\n}\r\n\r\nfunction CardPokemons() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [pokemonstype, setPokemonsType] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([\r\n          fetch(\"http://localhost:8000/home\"),\r\n          fetch(\"http://localhost:8000/type\"),\r\n          fetch(\"http://localhost:8000/evolve\"),\r\n        ]);\r\n\r\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\r\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\r\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\r\n\r\n        const pokemonsData = await resPokemons.json();\r\n        const typesData = await resTypes.json();\r\n        const evolvesData = await resEvolves.json();\r\n\r\n        setPokemons(pokemonsData || []);\r\n        setPokemonsType(typesData || []);\r\n        setEvolves(evolvesData || []);\r\n\r\n        // descomente para debug rápido:\r\n        // console.log(\"pokemons\", pokemonsData);\r\n        // console.log(\"evolves\", evolvesData);\r\n\r\n      } catch (err) {\r\n        console.error(\"Falha no fetch:\", err.message);\r\n        setPokemons([]);\r\n        setPokemonsType([]);\r\n        setEvolves([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (!pokemons || pokemons.length === 0) return <Spinner />;\r\n  if (!pokemonstype || pokemonstype.length === 0) return <Spinner />;\r\n\r\n  return (\r\n    <Card></Card>\r\n  );\r\n}\r\n\r\nexport default CardPokemons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
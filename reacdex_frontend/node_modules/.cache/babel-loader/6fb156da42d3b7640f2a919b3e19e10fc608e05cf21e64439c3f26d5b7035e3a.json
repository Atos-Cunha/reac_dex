{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\CardPokemons\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  height: auto;\n  margin: 0 auto; \n  background-color: #e3f5fd;\n  border-radius: 10px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n_c = Card;\nconst PokemonCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  margin: 5px;\n  border-radius: 8px;\n  background: #fff;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n`;\n_c2 = PokemonCard;\nconst PokemonEvoGrid = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: 10px 0;\n  padding: 10px;\n  border-radius: 10px;\n  background-color: #d0f0fd; /* cor de destaque */\n  box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n`;\n_c3 = PokemonEvoGrid;\nconst PokeNumber = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c4 = PokeNumber;\nconst PokemonImage = styled.img`\n  height: 200px;  \n  width: 200px;\n`;\n_c5 = PokemonImage;\nconst PokeName = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c6 = PokeName;\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c7 = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 30px;\n  height: 30px; \n`;\n_c8 = PokemonImageType;\nconst EvoLine = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 3px;\n`;\nconst PokeImgEvo = styled.img`\n  width: 35px;\n  height: 35px; \n`;\nconst Arrow = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n`;\n_c9 = Arrow;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n_c0 = Spinner;\nfunction normalizeNumber(value) {\n  if (value === undefined || value === null) return null;\n  const s = String(value);\n  const digits = s.replace(/\\D/g, \"\");\n  if (!digits) return null;\n  return String(parseInt(digits, 10));\n}\nfunction imageIdForSrc(obj) {\n  if (obj == null) return \"\";\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\n  if (obj.number) {\n    const raw = String(obj.number).replace(/^#/, \"\");\n    if (raw) return raw;\n  }\n  return normalizeNumber(obj.number) || \"\";\n}\nfunction CardPokemons() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [evolves, setEvolves] = useState([]);\n  const [pokemonstype, setPokemonsType] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([fetch(\"http://localhost:8000/home\"), fetch(\"http://localhost:8000/type\"), fetch(\"http://localhost:8000/evolve\")]);\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\n        const pokemonsData = await resPokemons.json();\n        const typesData = await resTypes.json();\n        const evolvesData = await resEvolves.json();\n        setPokemons(pokemonsData || []);\n        setPokemonsType(typesData || []);\n        setEvolves(evolvesData || []);\n      } catch (err) {\n        console.error(\"Falha no fetch:\", err.message);\n        setPokemons([]);\n        setPokemonsType([]);\n        setEvolves([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 23\n  }, this);\n  if (!pokemons || pokemons.length === 0) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 50\n  }, this);\n  if (!pokemonstype || pokemonstype.length === 0) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 58\n  }, this);\n\n  // marca evoluções já renderizadas\n  const renderedEvos = new Set();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: pokemons.map(pokemon => {\n      const pokeKey = normalizeNumber(pokemon.number) || normalizeNumber(pokemon.id);\n\n      // encontra a cadeia evolutiva\n      const baseEntry = evolves.find(ev => {\n        var _ev$pokemon;\n        return normalizeNumber(ev === null || ev === void 0 ? void 0 : (_ev$pokemon = ev.pokemon) === null || _ev$pokemon === void 0 ? void 0 : _ev$pokemon.number) === pokeKey || Array.isArray(ev.evolve) && ev.evolve.some(child => normalizeNumber(child.number) === pokeKey);\n      });\n\n      // se fizer parte de uma evolução e ainda não foi renderizada\n      if (baseEntry && !renderedEvos.has(baseEntry.pokemon.number)) {\n        renderedEvos.add(baseEntry.pokemon.number);\n        const fullEvoLine = [{\n          number: baseEntry.pokemon.number,\n          name: baseEntry.pokemon.name\n        }, ...(baseEntry.evolve || [])];\n        return /*#__PURE__*/_jsxDEV(PokemonEvoGrid, {\n          children: fullEvoLine.map((ev, idx) => {\n            var _evPokemon$id;\n            const evPokemon = pokemons.find(p => normalizeNumber(p.number) === normalizeNumber(ev.number));\n            return /*#__PURE__*/_jsxDEV(PokemonCard, {\n              children: [/*#__PURE__*/_jsxDEV(PokeNumber, {\n                children: [\"#\", (_evPokemon$id = evPokemon === null || evPokemon === void 0 ? void 0 : evPokemon.id) !== null && _evPokemon$id !== void 0 ? _evPokemon$id : ev.number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PokemonImage, {\n                src: (evPokemon === null || evPokemon === void 0 ? void 0 : evPokemon.image) || `http://localhost:8000/home/${imageIdForSrc(ev)}/img`,\n                alt: ev.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PokeName, {\n                style: {\n                  textTransform: \"uppercase\"\n                },\n                children: ev.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n                children: (Array.isArray(evPokemon === null || evPokemon === void 0 ? void 0 : evPokemon.type) ? evPokemon.type.slice(0, 2) : [evPokemon === null || evPokemon === void 0 ? void 0 : evPokemon.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n                  src: `http://localhost:8000/type/${encodeURIComponent(type)}.png`,\n                  alt: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), idx > 0 && /*#__PURE__*/_jsxDEV(Arrow, {\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)]\n            }, ev.number, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this);\n          })\n        }, baseEntry.pokemon.number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this);\n      }\n\n      // se não tiver evolução ou já foi renderizada, renderiza card isolado\n      if (!baseEntry) {\n        var _pokemon$id, _pokemon$id2;\n        return /*#__PURE__*/_jsxDEV(PokemonCard, {\n          children: [/*#__PURE__*/_jsxDEV(PokeNumber, {\n            children: [\"#\", (_pokemon$id2 = pokemon.id) !== null && _pokemon$id2 !== void 0 ? _pokemon$id2 : pokemon.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokemonImage, {\n            src: pokemon.image || `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`,\n            alt: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokeName, {\n            style: {\n              textTransform: \"uppercase\"\n            },\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n            children: (Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n              src: `http://localhost:8000/type/${encodeURIComponent(type)}.png`,\n              alt: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, (_pokemon$id = pokemon.id) !== null && _pokemon$id !== void 0 ? _pokemon$id : pokemon.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this);\n      }\n      return null;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(CardPokemons, \"ZnE0jgmFQ1Y/BptpTjFefOkr0pw=\");\n_c1 = CardPokemons;\nexport default CardPokemons;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"PokemonCard\");\n$RefreshReg$(_c3, \"PokemonEvoGrid\");\n$RefreshReg$(_c4, \"PokeNumber\");\n$RefreshReg$(_c5, \"PokemonImage\");\n$RefreshReg$(_c6, \"PokeName\");\n$RefreshReg$(_c7, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c8, \"PokemonImageType\");\n$RefreshReg$(_c9, \"Arrow\");\n$RefreshReg$(_c0, \"Spinner\");\n$RefreshReg$(_c1, \"CardPokemons\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","Card","div","_c","PokemonCard","_c2","PokemonEvoGrid","_c3","PokeNumber","p","_c4","PokemonImage","img","_c5","PokeName","_c6","PokemonImageTypeFrame","_c7","PokemonImageType","_c8","EvoLine","PokeImgEvo","Arrow","span","_c9","spin","Spinner","_c0","normalizeNumber","value","undefined","s","String","digits","replace","parseInt","imageIdForSrc","obj","id","number","raw","CardPokemons","_s","pokemons","setPokemons","evolves","setEvolves","pokemonstype","setPokemonsType","loading","setLoading","fetchData","resPokemons","resTypes","resEvolves","Promise","all","fetch","ok","Error","pokemonsData","json","typesData","evolvesData","err","console","error","message","fileName","_jsxFileName","lineNumber","columnNumber","length","renderedEvos","Set","children","map","pokemon","pokeKey","baseEntry","find","ev","_ev$pokemon","Array","isArray","evolve","some","child","has","add","fullEvoLine","name","idx","_evPokemon$id","evPokemon","src","image","alt","style","textTransform","type","slice","filter","Boolean","encodeURIComponent","_pokemon$id","_pokemon$id2","_c1","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/CardPokemons/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  height: auto;\r\n  margin: 0 auto; \r\n  background-color: #e3f5fd;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst PokemonCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 15px;\r\n  margin: 5px;\r\n  border-radius: 8px;\r\n  background: #fff;\r\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst PokemonEvoGrid = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  background-color: #d0f0fd; /* cor de destaque */\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.2);\r\n`;\r\n\r\nconst PokeNumber = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImage = styled.img`\r\n  height: 200px;  \r\n  width: 200px;\r\n`;\r\n\r\nconst PokeName = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 30px;\r\n  height: 30px; \r\n`;\r\n\r\nconst EvoLine = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 35px;\r\n  height: 35px; \r\n`;\r\n\r\nconst Arrow = styled.span`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\nfunction normalizeNumber(value) {\r\n  if (value === undefined || value === null) return null;\r\n  const s = String(value);\r\n  const digits = s.replace(/\\D/g, \"\");\r\n  if (!digits) return null;\r\n  return String(parseInt(digits, 10));\r\n}\r\n\r\nfunction imageIdForSrc(obj) {\r\n  if (obj == null) return \"\";\r\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\r\n  if (obj.number) {\r\n    const raw = String(obj.number).replace(/^#/, \"\");\r\n    if (raw) return raw;\r\n  }\r\n  return normalizeNumber(obj.number) || \"\";\r\n}\r\n\r\nfunction CardPokemons() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [pokemonstype, setPokemonsType] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([\r\n          fetch(\"http://localhost:8000/home\"),\r\n          fetch(\"http://localhost:8000/type\"),\r\n          fetch(\"http://localhost:8000/evolve\"),\r\n        ]);\r\n\r\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\r\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\r\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\r\n\r\n        const pokemonsData = await resPokemons.json();\r\n        const typesData = await resTypes.json();\r\n        const evolvesData = await resEvolves.json();\r\n\r\n        setPokemons(pokemonsData || []);\r\n        setPokemonsType(typesData || []);\r\n        setEvolves(evolvesData || []);\r\n\r\n      } catch (err) {\r\n        console.error(\"Falha no fetch:\", err.message);\r\n        setPokemons([]);\r\n        setPokemonsType([]);\r\n        setEvolves([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (!pokemons || pokemons.length === 0) return <Spinner />;\r\n  if (!pokemonstype || pokemonstype.length === 0) return <Spinner />;\r\n\r\n  // marca evoluções já renderizadas\r\n  const renderedEvos = new Set();\r\n\r\n  return (\r\n    <Card>\r\n      {pokemons.map((pokemon) => {\r\n        const pokeKey = normalizeNumber(pokemon.number) || normalizeNumber(pokemon.id);\r\n\r\n        // encontra a cadeia evolutiva\r\n        const baseEntry = evolves.find(ev =>\r\n          normalizeNumber(ev?.pokemon?.number) === pokeKey ||\r\n          (Array.isArray(ev.evolve) && ev.evolve.some(child => normalizeNumber(child.number) === pokeKey))\r\n        );\r\n\r\n        // se fizer parte de uma evolução e ainda não foi renderizada\r\n        if (baseEntry && !renderedEvos.has(baseEntry.pokemon.number)) {\r\n          renderedEvos.add(baseEntry.pokemon.number);\r\n          const fullEvoLine = [\r\n            { number: baseEntry.pokemon.number, name: baseEntry.pokemon.name },\r\n            ...(baseEntry.evolve || [])\r\n          ];\r\n\r\n          return (\r\n            <PokemonEvoGrid key={baseEntry.pokemon.number}>\r\n              {fullEvoLine.map((ev, idx) => {\r\n                const evPokemon = pokemons.find(p => normalizeNumber(p.number) === normalizeNumber(ev.number));\r\n                return (\r\n                  <PokemonCard key={ev.number}>\r\n                    <PokeNumber>#{evPokemon?.id ?? ev.number}</PokeNumber>\r\n                    <PokemonImage\r\n                      src={evPokemon?.image || `http://localhost:8000/home/${imageIdForSrc(ev)}/img`}\r\n                      alt={ev.name}\r\n                    />\r\n                    <PokeName style={{ textTransform: \"uppercase\" }}>{ev.name}</PokeName>\r\n                    <PokemonImageTypeFrame>\r\n                      {(Array.isArray(evPokemon?.type) ? evPokemon.type.slice(0,2) : [evPokemon?.type])\r\n                        .filter(Boolean)\r\n                        .map((type) => (\r\n                          <PokemonImageType\r\n                            key={type}\r\n                            src={`http://localhost:8000/type/${encodeURIComponent(type)}.png`}\r\n                            alt={type}\r\n                          />\r\n                        ))\r\n                      }\r\n                    </PokemonImageTypeFrame>\r\n                    {idx > 0 && <Arrow>→</Arrow>}\r\n                  </PokemonCard>\r\n                );\r\n              })}\r\n            </PokemonEvoGrid>\r\n          );\r\n        }\r\n\r\n        // se não tiver evolução ou já foi renderizada, renderiza card isolado\r\n        if (!baseEntry) {\r\n          return (\r\n            <PokemonCard key={pokemon.id ?? pokemon.number}>\r\n              <PokeNumber>#{pokemon.id ?? pokemon.number}</PokeNumber>\r\n              <PokemonImage src={pokemon.image || `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`} alt={pokemon.name}/>\r\n              <PokeName style={{ textTransform: \"uppercase\" }}>{pokemon.name}</PokeName>\r\n              <PokemonImageTypeFrame>\r\n                {(Array.isArray(pokemon.type) ? pokemon.type.slice(0,2) : [pokemon.type])\r\n                  .filter(Boolean)\r\n                  .map((type) => (\r\n                    <PokemonImageType\r\n                      key={type}\r\n                      src={`http://localhost:8000/type/${encodeURIComponent(type)}.png`}\r\n                      alt={type}\r\n                    />\r\n                  ))\r\n                }\r\n              </PokemonImageTypeFrame>\r\n            </PokemonCard>\r\n          );\r\n        }\r\n\r\n        return null;\r\n      })}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardPokemons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\EvolvePokemons\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokeEvolveFrame = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c = PokeEvolveFrame;\nconst PokemonRow = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\n_c2 = PokemonRow;\nconst PokeImgEvo = styled.img`\n  width: 60px;\n  height: 60px;\n`;\n_c3 = PokeImgEvo;\nconst Arrow = styled.span`\n  font-size: 18px;\n  font-weight: bold;\n`;\n_c4 = Arrow;\nconst pad3 = v => String(v !== null && v !== void 0 ? v : \"\").replace(/^#/, \"\").padStart(3, \"0\");\nfunction EvolvePokemons() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [evolves, setEvolves] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [errMsg, setErrMsg] = useState(\"\");\n  useEffect(() => {\n    async function fetchAll() {\n      try {\n        const [homeRes, evoRes] = await Promise.all([fetch(\"http://localhost:8000/home\"), fetch(\"http://localhost:8000/evolves\")]);\n        if (!homeRes.ok) throw new Error(\"Erro ao buscar /home\");\n        if (!evoRes.ok) throw new Error(\"Erro ao buscar /evolve\");\n        const homeData = await homeRes.json(); // lista de todos os pokémons\n        const evolvesData = await evoRes.json(); // [{ id, pokemon:{number,name}, evolve:[...]}]\n\n        setPokemons(Array.isArray(homeData) ? homeData : []);\n        setEvolves(Array.isArray(evolvesData) ? evolvesData : []);\n      } catch (e) {\n        console.error(e);\n        setErrMsg(e.message || \"Falha ao carregar dados\");\n        setPokemons([]);\n        setEvolves([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchAll();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 23\n  }, this);\n  if (errMsg) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: \"#b00\"\n    },\n    children: errMsg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 24\n  }, this);\n\n  // Mapa rápido: chave = número base 3 dígitos (ex: \"001\") -> registro do /evolves\n  const evoMap = new Map();\n  for (const e of evolves) {\n    var _e$id, _e$pokemon;\n    const key = pad3((_e$id = e === null || e === void 0 ? void 0 : e.id) !== null && _e$id !== void 0 ? _e$id : e === null || e === void 0 ? void 0 : (_e$pokemon = e.pokemon) === null || _e$pokemon === void 0 ? void 0 : _e$pokemon.number);\n    if (key) evoMap.set(key, e);\n  }\n\n  // Filtra só quem evolui\n  const onlyWhoEvolves = pokemons.filter(p => (p === null || p === void 0 ? void 0 : p.evolve) === true);\n  return /*#__PURE__*/_jsxDEV(PokeEvolveFrame, {\n    children: onlyWhoEvolves.map(pokemon => {\n      var _ref, _pokemon$id, _pokemon$pokemon, _ref2, _pokemon$name, _pokemon$pokemon2;\n      const baseNum = pad3((_ref = (_pokemon$id = pokemon === null || pokemon === void 0 ? void 0 : pokemon.id) !== null && _pokemon$id !== void 0 ? _pokemon$id : pokemon === null || pokemon === void 0 ? void 0 : pokemon.number) !== null && _ref !== void 0 ? _ref : pokemon === null || pokemon === void 0 ? void 0 : (_pokemon$pokemon = pokemon.pokemon) === null || _pokemon$pokemon === void 0 ? void 0 : _pokemon$pokemon.number);\n      const baseName = (_ref2 = (_pokemon$name = pokemon === null || pokemon === void 0 ? void 0 : pokemon.name) !== null && _pokemon$name !== void 0 ? _pokemon$name : pokemon === null || pokemon === void 0 ? void 0 : (_pokemon$pokemon2 = pokemon.pokemon) === null || _pokemon$pokemon2 === void 0 ? void 0 : _pokemon$pokemon2.name) !== null && _ref2 !== void 0 ? _ref2 : \"\";\n      const evoData = evoMap.get(baseNum);\n\n      // Se não achou as evoluções correspondentes, não renderiza (ou mostre só o base)\n      if (!evoData || !Array.isArray(evoData.evolve) || evoData.evolve.length === 0) {\n        return null;\n      }\n      return /*#__PURE__*/_jsxDEV(PokemonRow, {\n        children: [/*#__PURE__*/_jsxDEV(PokeImgEvo, {\n          src: `http://localhost:8000/home/${baseNum}/img`,\n          alt: baseName || baseNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), evoData.evolve.map(evo => {\n          const evoNum = pad3(evo.number);\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(Arrow, {\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PokeImgEvo, {\n              src: `http://localhost:8000/home/${evoNum}/img`,\n              alt: evo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, evoNum, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this);\n        })]\n      }, baseNum, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(EvolvePokemons, \"vrKAAyxRQ/w1d0leHEfkCkufhEw=\");\n_c5 = EvolvePokemons;\nexport default EvolvePokemons;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"PokeEvolveFrame\");\n$RefreshReg$(_c2, \"PokemonRow\");\n$RefreshReg$(_c3, \"PokeImgEvo\");\n$RefreshReg$(_c4, \"Arrow\");\n$RefreshReg$(_c5, \"EvolvePokemons\");","map":{"version":3,"names":["useEffect","useState","styled","jsxDEV","_jsxDEV","PokeEvolveFrame","div","_c","PokemonRow","_c2","PokeImgEvo","img","_c3","Arrow","span","_c4","pad3","v","String","replace","padStart","EvolvePokemons","_s","pokemons","setPokemons","evolves","setEvolves","loading","setLoading","errMsg","setErrMsg","fetchAll","homeRes","evoRes","Promise","all","fetch","ok","Error","homeData","json","evolvesData","Array","isArray","e","console","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","evoMap","Map","_e$id","_e$pokemon","key","id","pokemon","number","set","onlyWhoEvolves","filter","p","evolve","map","_ref","_pokemon$id","_pokemon$pokemon","_ref2","_pokemon$name","_pokemon$pokemon2","baseNum","baseName","name","evoData","get","length","src","alt","evo","evoNum","display","alignItems","gap","_c5","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/EvolvePokemons/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst PokeEvolveFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n`;\r\n\r\nconst Arrow = styled.span`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst pad3 = (v) => String(v ?? \"\").replace(/^#/, \"\").padStart(3, \"0\");\r\n\r\nfunction EvolvePokemons() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchAll() {\r\n      try {\r\n        const [homeRes, evoRes] = await Promise.all([\r\n          fetch(\"http://localhost:8000/home\"),\r\n          fetch(\"http://localhost:8000/evolves\"),\r\n        ]);\r\n\r\n        if (!homeRes.ok) throw new Error(\"Erro ao buscar /home\");\r\n        if (!evoRes.ok) throw new Error(\"Erro ao buscar /evolve\");\r\n\r\n        const homeData = await homeRes.json();     // lista de todos os pokémons\r\n        const evolvesData = await evoRes.json();   // [{ id, pokemon:{number,name}, evolve:[...]}]\r\n\r\n        setPokemons(Array.isArray(homeData) ? homeData : []);\r\n        setEvolves(Array.isArray(evolvesData) ? evolvesData : []);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setErrMsg(e.message || \"Falha ao carregar dados\");\r\n        setPokemons([]);\r\n        setEvolves([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchAll();\r\n  }, []);\r\n\r\n  if (loading) return <p>Carregando...</p>;\r\n  if (errMsg)   return <p style={{color:\"#b00\"}}>{errMsg}</p>;\r\n\r\n  // Mapa rápido: chave = número base 3 dígitos (ex: \"001\") -> registro do /evolves\r\n  const evoMap = new Map();\r\n  for (const e of evolves) {\r\n    const key = pad3(e?.id ?? e?.pokemon?.number);\r\n    if (key) evoMap.set(key, e);\r\n  }\r\n\r\n  // Filtra só quem evolui\r\n  const onlyWhoEvolves = pokemons.filter(p => p?.evolve === true);\r\n\r\n  return (\r\n    <PokeEvolveFrame>\r\n      {onlyWhoEvolves.map((pokemon) => {\r\n        const baseNum = pad3(pokemon?.id ?? pokemon?.number ?? pokemon?.pokemon?.number);\r\n        const baseName = pokemon?.name ?? pokemon?.pokemon?.name ?? \"\";\r\n        const evoData  = evoMap.get(baseNum);\r\n\r\n        // Se não achou as evoluções correspondentes, não renderiza (ou mostre só o base)\r\n        if (!evoData || !Array.isArray(evoData.evolve) || evoData.evolve.length === 0) {\r\n          return null;\r\n        }\r\n\r\n        return (\r\n          <PokemonRow key={baseNum}>\r\n            {/* Base */}\r\n            <PokeImgEvo\r\n              src={`http://localhost:8000/home/${baseNum}/img`}\r\n              alt={baseName || baseNum}\r\n            />\r\n\r\n            {/* → Evoluções */}\r\n            {evoData.evolve.map((evo) => {\r\n              const evoNum = pad3(evo.number);\r\n              return (\r\n                <span key={evoNum} style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\r\n                  <Arrow>→</Arrow>\r\n                  <PokeImgEvo\r\n                    src={`http://localhost:8000/home/${evoNum}/img`}\r\n                    alt={evo.name}\r\n                  />\r\n                </span>\r\n              );\r\n            })}\r\n          </PokemonRow>\r\n        );\r\n      })}\r\n    </PokeEvolveFrame>\r\n  );\r\n}\r\n\r\nexport default EvolvePokemons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
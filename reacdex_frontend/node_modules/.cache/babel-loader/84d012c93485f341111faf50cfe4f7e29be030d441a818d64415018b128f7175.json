{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\FrameTypes\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\n// === Styled Components ===\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  height: auto;\n  margin: 0 auto;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\n`;\n_c = Card;\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c2 = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 30px;\n  height: 30px;\n`;\n_c3 = PokemonImageType;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n\n// === Componente Principal ===\n_c4 = Spinner;\nfunction FrameTypes() {\n  _s();\n  const [types, setTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchTypes() {\n      try {\n        const res = await fetch(\"http://localhost:8000/types\");\n        if (!res.ok) throw new Error(\"Erro ao buscar tipos\");\n        const data = await res.json();\n\n        // garante que só venha 1 de cada tipo\n        const uniqueTypes = [...new Set(data.map(t => t.type))];\n        console.log(types);\n        setTypes(uniqueTypes);\n      } catch (err) {\n        console.error(\"Erro no fetch:\", err.message);\n        setTypes([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTypes();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 23\n  }, this);\n  if (!types.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Nenhum tipo encontrado.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n      children: types.map(type =>\n      /*#__PURE__*/\n      // console.log(type)\n      _jsxDEV(PokemonImageType, {\n        src: `http://localhost:8000/types/${encodeURIComponent(type)}.png`,\n        alt: String(type)\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(FrameTypes, \"zXjupfmYP9aHpJ+Z2U1dDW6KUZQ=\");\n_c5 = FrameTypes;\nexport default FrameTypes;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c3, \"PokemonImageType\");\n$RefreshReg$(_c4, \"Spinner\");\n$RefreshReg$(_c5, \"FrameTypes\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","Card","div","_c","PokemonImageTypeFrame","_c2","PokemonImageType","img","_c3","spin","Spinner","_c4","FrameTypes","_s","types","setTypes","loading","setLoading","fetchTypes","res","fetch","ok","Error","data","json","uniqueTypes","Set","map","t","type","console","log","err","error","message","fileName","_jsxFileName","lineNumber","columnNumber","length","children","src","encodeURIComponent","alt","String","_c5","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/FrameTypes/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\n// === Styled Components ===\r\nconst Card = styled.div`\r\n  height: auto;\r\n  margin: 0 auto;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\r\n`;\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\n// === Componente Principal ===\r\nfunction FrameTypes() {\r\n  const [types, setTypes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchTypes() {\r\n      try {\r\n        const res = await fetch(\"http://localhost:8000/types\");\r\n        if (!res.ok) throw new Error(\"Erro ao buscar tipos\");\r\n\r\n        const data = await res.json();\r\n\r\n        // garante que só venha 1 de cada tipo\r\n        const uniqueTypes = [...new Set(data.map((t) => t.type))];\r\n\r\nconsole.log(types)\r\n\r\n\r\n        setTypes(uniqueTypes);\r\n      } catch (err) {\r\n        console.error(\"Erro no fetch:\", err.message);\r\n        setTypes([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchTypes();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (!types.length) return <p>Nenhum tipo encontrado.</p>;\r\n\r\n  return (\r\n    <Card>\r\n      <PokemonImageTypeFrame>\r\n        {types.map((type) => (\r\n          // console.log(type)\r\n          <PokemonImageType\r\n            key={type}\r\n            src={`http://localhost:8000/types/${encodeURIComponent(type)}.png`}\r\n            alt={String(type)}\r\n\r\n            />\r\n        ))}\r\n      </PokemonImageTypeFrame>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default FrameTypes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\FrameFavs\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  margin: 5px;\n  border-radius: 8px;\n  background: #fff;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n`;\n_c = PokemonCard;\nconst PokemonEvoGrid = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 15px;\n  margin: 10px;\n  border-radius: 8px;\n  background-color: #e3f5fd;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n  gap: 15px;\n`;\n_c2 = PokemonEvoGrid;\nconst PokeNumber = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c3 = PokeNumber;\nconst PokemonImage = styled.img`\n  height: 200px;  \n  width: 200px;\n`;\n_c4 = PokemonImage;\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c5 = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 30px;\n  height: 30px; \n`;\n_c6 = PokemonImageType;\nconst Arrow = styled.span`\n  font-size: 30px;\n  font-weight: bold;\n  color: #000;\n  margin: 0 10px;\n  display: flex;\n  align-items: center;\n`;\n_c7 = Arrow;\nconst FrameDef = styled.div`\n  border: 2px solid #000;\n  height: auto;\n  width: 80%;\n  margin-left: 10%;\n  margin-right: 10%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n_c8 = FrameDef;\nconst FrameRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  background-color: #ffffff3c;\n  padding: 10px;\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n  gap: 12px;\n`;\n_c9 = FrameRow;\nconst Card = styled.div`\n  background-color: #ffffff3c;\n  width: 120px;\n  border-radius: 10px;\n  text-align: center;\n  padding: 6px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.08);\n  border: 1px solid #fff;\n`;\n_c0 = Card;\nconst PokeName = styled.p`\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  text-transform: uppercase;\n  font-size: 15px;\n  margin: 6px 0 0;\n  color: #fff;\n`;\n_c1 = PokeName;\nconst PokeImg = styled.img`\n  width: 100px;\n  height: 100px;\n`;\nconst PokeTypeFrame = styled.div`\n  border: 2px solid #000;\n  height: auto;\n  width: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: center; /* corrigido */\n  gap: 10px;\n  margin-top: 8px;\n`;\nconst PokeTypeImg = styled.img`\n  width: 40px;\n  height: 40px;\n`;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50px;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n\n/* normaliza '#001' / '001' / 1 -> '1' */\nfunction normalizeNumber(value) {\n  if (value === undefined || value === null) return null;\n  const s = String(value);\n  const digits = s.replace(/\\D/g, \"\");\n  if (!digits) return null;\n  return String(parseInt(digits, 10));\n}\n\n/* id/number normalizado de um Pokémon do /home */\nfunction pokeKeyFromHome(p) {\n  var _normalizeNumber;\n  return (_normalizeNumber = normalizeNumber(p === null || p === void 0 ? void 0 : p.number)) !== null && _normalizeNumber !== void 0 ? _normalizeNumber : normalizeNumber(p === null || p === void 0 ? void 0 : p.id);\n}\n\n/* monta id da imagem */\nfunction imageIdForSrc(obj) {\n  if (obj == null) return \"\";\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\n  if (obj.number) {\n    const raw = String(obj.number).replace(/^#/, \"\");\n    if (raw) return raw;\n  }\n  return normalizeNumber(obj.number) || \"\";\n}\nfunction FrameFavs() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [evolves, setEvolves] = useState([]);\n  const [pokemonstype, setPokemonsType] = useState([]);\n  const [favs, setFavs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [resPokemons, resTypes, resEvolves, resFavs] = await Promise.all([fetch(\"http://localhost:8000/home\"), fetch(\"http://localhost:8000/type\"), fetch(\"http://localhost:8000/evolve\"), fetch(\"http://localhost:8000/fav\")]);\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\n        if (!resFavs.ok) throw new Error(\"Erro ao buscar favoritos\");\n        const pokemonsData = await resPokemons.json();\n        const typesData = await resTypes.json();\n        const evolvesData = await resEvolves.json();\n        const favsData = await resFavs.json();\n        setPokemons(pokemonsData || []);\n        setPokemonsType(typesData || []);\n        setEvolves(evolvesData || []);\n        setFavs(favsData || []);\n      } catch (err) {\n        console.error(\"Falha no fetch:\", err.message);\n        setPokemons([]);\n        setPokemonsType([]);\n        setEvolves([]);\n        setFavs([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // if (loading) return <Spinner />;\n  // if (!pokemons?.length) return <Spinner />;\n  // if (!pokemonstype?.length) return <Spinner />;\n\n  // ---- AGRUPA por cadeias evolutivas (e adiciona \"solteiros\") ----\n  const evoGroups = [];\n\n  // 1) grupos vindos do /evolve\n  for (const chain of evolves || []) {\n    var _chain$pokemon, _chain$pokemon2;\n    const fullLine = [{\n      number: chain === null || chain === void 0 ? void 0 : (_chain$pokemon = chain.pokemon) === null || _chain$pokemon === void 0 ? void 0 : _chain$pokemon.number,\n      name: chain === null || chain === void 0 ? void 0 : (_chain$pokemon2 = chain.pokemon) === null || _chain$pokemon2 === void 0 ? void 0 : _chain$pokemon2.name\n    }, ...((chain === null || chain === void 0 ? void 0 : chain.evolve) || [])].filter(x => x && x.number);\n    const group = fullLine.map(ev => pokemons.find(p => pokeKeyFromHome(p) === normalizeNumber(ev.number))).filter(Boolean);\n    if (group.length > 0) {\n      evoGroups.push(group);\n    }\n  }\n\n  // 2) adiciona pokémon que não apareceu em nenhuma cadeia (sem evolução)\n  const covered = new Set(evoGroups.flat().map(p => pokeKeyFromHome(p)).filter(Boolean));\n  const singles = pokemons.filter(p => {\n    const key = pokeKeyFromHome(p);\n    return key && !covered.has(key);\n  });\n  for (const single of singles) {\n    evoGroups.push([single]); // um grid com um único card\n  }\n  return /*#__PURE__*/_jsxDEV(FrameDef, {\n    children: /*#__PURE__*/_jsxDEV(FrameRow, {\n      children: [\"return (\", /*#__PURE__*/_jsxDEV(Card, {\n        children: evoGroups.map((group, idx) => /*#__PURE__*/_jsxDEV(PokemonEvoGrid, {\n          children: group.map((pokemon, i) => {\n            var _pokemon$id, _pokemon$id2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 10\n              },\n              children: [i > 0 && /*#__PURE__*/_jsxDEV(Arrow, {\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(PokemonCard, {\n                children: [/*#__PURE__*/_jsxDEV(PokeNumber, {\n                  children: [\"#\", (_pokemon$id2 = pokemon.id) !== null && _pokemon$id2 !== void 0 ? _pokemon$id2 : pokemon.number || \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(PokemonImage, {\n                  src: pokemon.image || `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`,\n                  alt: pokemon.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(PokeName, {\n                  style: {\n                    textTransform: \"uppercase\"\n                  },\n                  children: pokemon.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n                  children: (Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n                    src: `http://localhost:8000/type/${encodeURIComponent(type)}.png`,\n                    alt: String(type)\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)]\n            }, (_pokemon$id = pokemon.id) !== null && _pokemon$id !== void 0 ? _pokemon$id : pokemon.number, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this);\n          })\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n}\n_s(FrameFavs, \"mJJ9HqCw1tfe6YWFl31Ik8ZmWcw=\");\n_c10 = FrameFavs;\nexport default FrameFavs;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10;\n$RefreshReg$(_c, \"PokemonCard\");\n$RefreshReg$(_c2, \"PokemonEvoGrid\");\n$RefreshReg$(_c3, \"PokeNumber\");\n$RefreshReg$(_c4, \"PokemonImage\");\n$RefreshReg$(_c5, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c6, \"PokemonImageType\");\n$RefreshReg$(_c7, \"Arrow\");\n$RefreshReg$(_c8, \"FrameDef\");\n$RefreshReg$(_c9, \"FrameRow\");\n$RefreshReg$(_c0, \"Card\");\n$RefreshReg$(_c1, \"PokeName\");\n$RefreshReg$(_c10, \"FrameFavs\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","PokemonCard","div","_c","PokemonEvoGrid","_c2","PokeNumber","p","_c3","PokemonImage","img","_c4","PokemonImageTypeFrame","_c5","PokemonImageType","_c6","Arrow","span","_c7","FrameDef","_c8","FrameRow","_c9","Card","_c0","PokeName","_c1","PokeImg","PokeTypeFrame","PokeTypeImg","spin","Spinner","normalizeNumber","value","undefined","s","String","digits","replace","parseInt","pokeKeyFromHome","_normalizeNumber","number","id","imageIdForSrc","obj","raw","FrameFavs","_s","pokemons","setPokemons","evolves","setEvolves","pokemonstype","setPokemonsType","favs","setFavs","loading","setLoading","fetchData","resPokemons","resTypes","resEvolves","resFavs","Promise","all","fetch","ok","Error","pokemonsData","json","typesData","evolvesData","favsData","err","console","error","message","evoGroups","chain","_chain$pokemon","_chain$pokemon2","fullLine","pokemon","name","evolve","filter","x","group","map","ev","find","Boolean","length","push","covered","Set","flat","singles","key","has","single","children","idx","i","_pokemon$id","_pokemon$id2","style","display","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","textTransform","Array","isArray","type","slice","encodeURIComponent","_c10","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/FrameFavs/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst PokemonCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 15px;\r\n  margin: 5px;\r\n  border-radius: 8px;\r\n  background: #fff;\r\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst PokemonEvoGrid = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 15px;\r\n  margin: 10px;\r\n  border-radius: 8px;\r\n  background-color: #e3f5fd;\r\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\r\n  gap: 15px;\r\n`;\r\n\r\nconst PokeNumber = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImage = styled.img`\r\n  height: 200px;  \r\n  width: 200px;\r\n`;\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 30px;\r\n  height: 30px; \r\n`;\r\n\r\nconst Arrow = styled.span`\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  color: #000;\r\n  margin: 0 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst FrameDef = styled.div`\r\n  border: 2px solid #000;\r\n  height: auto;\r\n  width: 80%;\r\n  margin-left: 10%;\r\n  margin-right: 10%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\n\r\nconst FrameRow = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  background-color: #ffffff3c;\r\n  padding: 10px;\r\n  border-radius: 20px;\r\n  backdrop-filter: blur(10px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\r\n  gap: 12px;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  background-color: #ffffff3c;\r\n  width: 120px;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  padding: 6px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.08);\r\n  border: 1px solid #fff;\r\n`;\r\n\r\nconst PokeName = styled.p`\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  text-transform: uppercase;\r\n  font-size: 15px;\r\n  margin: 6px 0 0;\r\n  color: #fff;\r\n`;\r\n\r\nconst PokeImg = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n`;\r\n\r\nconst PokeTypeFrame = styled.div`\r\n  border: 2px solid #000;\r\n  height: auto;\r\n  width: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center; /* corrigido */\r\n  gap: 10px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst PokeTypeImg = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50px;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\n/* normaliza '#001' / '001' / 1 -> '1' */\r\nfunction normalizeNumber(value) {\r\n  if (value === undefined || value === null) return null;\r\n  const s = String(value);\r\n  const digits = s.replace(/\\D/g, \"\");\r\n  if (!digits) return null;\r\n  return String(parseInt(digits, 10));\r\n}\r\n\r\n/* id/number normalizado de um Pokémon do /home */\r\nfunction pokeKeyFromHome(p) {\r\n  return normalizeNumber(p?.number) ?? normalizeNumber(p?.id);\r\n}\r\n\r\n/* monta id da imagem */\r\nfunction imageIdForSrc(obj) {\r\n  if (obj == null) return \"\";\r\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\r\n  if (obj.number) {\r\n    const raw = String(obj.number).replace(/^#/, \"\");\r\n    if (raw) return raw;\r\n  }\r\n  return normalizeNumber(obj.number) || \"\";\r\n}\r\n\r\nfunction FrameFavs() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [pokemonstype, setPokemonsType] = useState([]);\r\n  const [favs, setFavs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const [resPokemons, resTypes, resEvolves, resFavs] = await Promise.all([\r\n          fetch(\"http://localhost:8000/home\"),\r\n          fetch(\"http://localhost:8000/type\"),\r\n          fetch(\"http://localhost:8000/evolve\"),\r\n          fetch(\"http://localhost:8000/fav\"),\r\n        ]);\r\n\r\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\r\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\r\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\r\n        if (!resFavs.ok) throw new Error(\"Erro ao buscar favoritos\");\r\n\r\n        const pokemonsData = await resPokemons.json();\r\n        const typesData = await resTypes.json();\r\n        const evolvesData = await resEvolves.json();\r\n        const favsData = await resFavs.json();\r\n\r\n        setPokemons(pokemonsData || []);\r\n        setPokemonsType(typesData || []);\r\n        setEvolves(evolvesData || []);\r\n        setFavs(favsData || []);\r\n      } catch (err) {\r\n        console.error(\"Falha no fetch:\", err.message);\r\n        setPokemons([]);\r\n        setPokemonsType([]);\r\n        setEvolves([]);\r\n        setFavs([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // if (loading) return <Spinner />;\r\n  // if (!pokemons?.length) return <Spinner />;\r\n  // if (!pokemonstype?.length) return <Spinner />;\r\n\r\n  // ---- AGRUPA por cadeias evolutivas (e adiciona \"solteiros\") ----\r\n  const evoGroups = [];\r\n\r\n  // 1) grupos vindos do /evolve\r\n  for (const chain of (evolves || [])) {\r\n    const fullLine = [\r\n      { number: chain?.pokemon?.number, name: chain?.pokemon?.name },\r\n      ...((chain?.evolve) || []),\r\n    ].filter(x => x && x.number);\r\n\r\n    const group = fullLine\r\n      .map(ev => pokemons.find(p => pokeKeyFromHome(p) === normalizeNumber(ev.number)))\r\n      .filter(Boolean);\r\n\r\n    if (group.length > 0) {\r\n      evoGroups.push(group);\r\n    }\r\n  }\r\n\r\n  // 2) adiciona pokémon que não apareceu em nenhuma cadeia (sem evolução)\r\n  const covered = new Set(\r\n    evoGroups.flat().map(p => pokeKeyFromHome(p)).filter(Boolean)\r\n  );\r\n\r\n  const singles = pokemons.filter(p => {\r\n    const key = pokeKeyFromHome(p);\r\n    return key && !covered.has(key);\r\n  });\r\n\r\n  for (const single of singles) {\r\n    evoGroups.push([single]); // um grid com um único card\r\n  }\r\n\r\n  return (\r\n    <FrameDef>\r\n      <FrameRow>\r\n        return (\r\n        <Card>\r\n          {evoGroups.map((group, idx) => (\r\n            <PokemonEvoGrid key={idx}>\r\n              {group.map((pokemon, i) => (\r\n                <div key={pokemon.id ?? pokemon.number} style={{ display: \"flex\", alignItems: \"center\", gap: 10 }}>\r\n                  {i > 0 && <Arrow>→</Arrow>}\r\n\r\n                  <PokemonCard>\r\n                    <PokeNumber>#{pokemon.id ?? (pokemon.number || \"\")}</PokeNumber>\r\n\r\n                    <PokemonImage\r\n                      src={\r\n                        pokemon.image ||\r\n                        `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`\r\n                      }\r\n                      alt={pokemon.name}\r\n                    />\r\n\r\n                    <PokeName style={{ textTransform: \"uppercase\" }}>\r\n                      {pokemon.name}\r\n                    </PokeName>\r\n\r\n                    <PokemonImageTypeFrame>\r\n                      {(Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type])\r\n                        .filter(Boolean)\r\n                        .map((type) => (\r\n                          <PokemonImageType\r\n                            key={type}\r\n                            src={`http://localhost:8000/type/${encodeURIComponent(type)}.png`}\r\n                            alt={String(type)}\r\n                          />\r\n                        ))}\r\n                    </PokemonImageTypeFrame>\r\n                  </PokemonCard>\r\n                </div>\r\n              ))}\r\n            </PokemonEvoGrid>\r\n          ))}\r\n        </Card>\r\n      </FrameRow>\r\n    </FrameDef>\r\n  );\r\n}\r\n\r\nexport default FrameFavs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
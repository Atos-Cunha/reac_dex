{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\FrameTypes\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FrameDef = styled.div`\n    // max-width: 80%;\n    // max-height: 100%;\n    margin: 0 auto; \n    padding-top: 20px;\n    padding-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n    margin-left: 10%;\n    margin-right: 10%;\n`;\n_c = FrameDef;\nconst FramePokeImgType = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c2 = FramePokeImgType;\nconst Card = styled.div`\n  height: auto;\n  margin: 0 auto;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\n  padding: 15px;\n`;\n_c3 = Card;\nconst PokeImgType = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: contain;\n`;\n_c4 = PokeImgType;\nconst TitleType = styled.h3`\n  text-transform: uppercase;\n  font-size: 18px;\n  margin: 10px 0;\n`;\n_c5 = TitleType;\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n_c6 = Spinner;\nfunction FrameTypes() {\n  _s();\n  const [types, setTypes] = useState([]); // ⬅️ começa como array\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchTypes() {\n      try {\n        const res = await fetch(\"http://localhost:8000/types\");\n        if (!res.ok) throw new Error(\"Erro ao buscar tipos\");\n        const data = await res.json();\n        console.log(\"Resposta do backend /types:\", data);\n\n        // data já vem no formato [{ name, url }]\n        setTypes(data);\n      } catch (err) {\n        console.error(\"Erro no fetch:\", err.message);\n        setTypes([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTypes();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 23\n  }, this);\n  if (!types.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Nenhum tipo encontrado.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(FrameDef, {\n    children: /*#__PURE__*/_jsxDEV(FramePokeImgType, {\n      children: types.map(typeObj => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(TitleType, {\n          children: typeObj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PokeImgType, {\n          src: `http://localhost:8000${typeObj.url}` // backend devolve /types/xxx.png\n          ,\n          alt: typeObj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, typeObj.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(FrameTypes, \"zXjupfmYP9aHpJ+Z2U1dDW6KUZQ=\");\n_c7 = FrameTypes;\nexport default FrameTypes;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"FrameDef\");\n$RefreshReg$(_c2, \"FramePokeImgType\");\n$RefreshReg$(_c3, \"Card\");\n$RefreshReg$(_c4, \"PokeImgType\");\n$RefreshReg$(_c5, \"TitleType\");\n$RefreshReg$(_c6, \"Spinner\");\n$RefreshReg$(_c7, \"FrameTypes\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","FrameDef","div","_c","FramePokeImgType","_c2","Card","_c3","PokeImgType","img","_c4","TitleType","h3","_c5","spin","Spinner","_c6","FrameTypes","_s","types","setTypes","loading","setLoading","fetchTypes","res","fetch","ok","Error","data","json","console","log","err","error","message","fileName","_jsxFileName","lineNumber","columnNumber","length","children","map","typeObj","name","src","url","alt","_c7","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/FrameTypes/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst FrameDef = styled.div`\r\n    // max-width: 80%;\r\n    // max-height: 100%;\r\n    margin: 0 auto; \r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10%;\r\n    margin-right: 10%;\r\n`\r\nconst FramePokeImgType = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  height: auto;\r\n  margin: 0 auto;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\r\n  padding: 15px;\r\n`;\r\n\r\nconst PokeImgType = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst TitleType = styled.h3`\r\n  text-transform: uppercase;\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\nfunction FrameTypes() {\r\n  const [types, setTypes] = useState([]); // ⬅️ começa como array\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchTypes() {\r\n      try {\r\n        const res = await fetch(\"http://localhost:8000/types\");\r\n        if (!res.ok) throw new Error(\"Erro ao buscar tipos\");\r\n        const data = await res.json();\r\n        console.log(\"Resposta do backend /types:\", data);\r\n\r\n        // data já vem no formato [{ name, url }]\r\n        setTypes(data);\r\n      } catch (err) {\r\n        console.error(\"Erro no fetch:\", err.message);\r\n        setTypes([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchTypes();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (!types.length) return <p>Nenhum tipo encontrado.</p>;\r\n\r\n  return (\r\n    <FrameDef>\r\n      <FramePokeImgType>\r\n        {types.map((typeObj) => (\r\n          <Card key={typeObj.name}>\r\n            <TitleType>{typeObj.name}</TitleType>\r\n            <PokeImgType\r\n              src={`http://localhost:8000${typeObj.url}`} // backend devolve /types/xxx.png\r\n              alt={typeObj.name}\r\n            />\r\n          </Card>\r\n        ))}\r\n      </FramePokeImgType>\r\n    </FrameDef>\r\n  );\r\n}\r\n\r\nexport default FrameTypes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\routes\\\\Evolves.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FramePokeEvoGrid = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin: 20px 0;\n`;\n_c = FramePokeEvoGrid;\nconst EvolveCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 12px;\n  padding: 12px;\n  background: #f8f9fa;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n`;\n_c2 = EvolveCard;\nconst PokeImgEvo = styled.img`\n  width: 120px;\n  height: 120px;\n  object-fit: contain;\n`;\n_c3 = PokeImgEvo;\nfunction Evolves() {\n  _s();\n  const [evolves, setEvolves] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/evolves\").then(res => res.json()).then(data => setEvolves(data || [])).catch(err => {\n      console.error(\"Erro ao buscar evoluções:\", err);\n      setEvolves([]);\n    }).finally(() => setLoading(false));\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  if (!Array.isArray(evolves) || evolves.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Nenhuma evolu\\xE7\\xE3o encontrada.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 63\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: evolves.map(group => {\n      var _group$chain;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FramePokeEvoGrid, {\n          children: (_group$chain = group.chain) === null || _group$chain === void 0 ? void 0 : _group$chain.map(ev => {\n            var _ev$id;\n            return /*#__PURE__*/_jsxDEV(EvolveCard, {\n              children: /*#__PURE__*/_jsxDEV(PokeImgEvo, {\n                src: ev.image || `http://localhost:8000/home/${ev.number}/img`,\n                alt: ev.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, (_ev$id = ev.id) !== null && _ev$id !== void 0 ? _ev$id : ev.number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, group.group, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Evolves, \"+K23nGhnXSGHf0s5dxN3CVAw7x0=\");\n_c4 = Evolves;\nexport default Evolves;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FramePokeEvoGrid\");\n$RefreshReg$(_c2, \"EvolveCard\");\n$RefreshReg$(_c3, \"PokeImgEvo\");\n$RefreshReg$(_c4, \"Evolves\");","map":{"version":3,"names":["useEffect","useState","styled","jsxDEV","_jsxDEV","FramePokeEvoGrid","div","_c","EvolveCard","_c2","PokeImgEvo","img","_c3","Evolves","_s","evolves","setEvolves","loading","setLoading","fetch","then","res","json","data","catch","err","console","error","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","style","padding","map","group","_group$chain","chain","ev","_ev$id","src","image","number","alt","name","id","_c4","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/routes/Evolves.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FramePokeEvoGrid = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst EvolveCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 12px;\r\n  padding: 12px;\r\n  background: #f8f9fa;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  object-fit: contain;\r\n`;\r\n\r\nfunction Evolves() {\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/evolves\")\r\n      .then((res) => res.json())\r\n      .then((data) => setEvolves(data || []))\r\n      .catch((err) => {\r\n        console.error(\"Erro ao buscar evoluções:\", err);\r\n        setEvolves([]);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  if (loading) return <p>Carregando...</p>;\r\n  if (!Array.isArray(evolves) || evolves.length === 0) return <p>Nenhuma evolução encontrada.</p>;\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      \r\n      {evolves.map((group) => (\r\n        <div key={group.group}>\r\n\r\n          <FramePokeEvoGrid>\r\n            {group.chain?.map((ev) => (\r\n              <EvolveCard key={ev.id ?? ev.number}>\r\n                <PokeImgEvo\r\n                  src={ev.image || `http://localhost:8000/home/${ev.number}/img`}\r\n                  alt={ev.name}\r\n                />\r\n              </EvolveCard>\r\n            ))}\r\n          </FramePokeEvoGrid>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Evolves;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
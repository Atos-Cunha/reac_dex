{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\componentes\\\\CardPokemons\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  height: auto;\n  margin: 0 auto; \n  border-radius: 10px;\n\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n\n// background-image: linear-gradient(60deg, #08416cff 0%, #bde8fbff 100%);\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\n\n  width: 100%;\n  // height: auto;\n  // min-width: 20%;\n`;\n_c = Card;\nconst PokemonCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  // padding: 15px;\n  margin: 5px;\n  border-radius: 8px;\n  background: #fff;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n\n  width: auto;\n  // width: 80%;\n  // width: 200px;\n  // height: 200px;\n  // min-width: 20%;\n\n  `;\n_c2 = PokemonCard;\nconst PokeNumber = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c3 = PokeNumber;\nconst PokemonImage = styled.img`\n  height: 200px;  \n  width: 200px;\n`;\n_c4 = PokemonImage;\nconst PokeName = styled.p`\n  font-size: 20px;\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: #333;\n`;\n_c5 = PokeName;\nconst PokemonImageTypeFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 6px;\n  padding: 15px;\n  margin: 5px;\n`;\n_c6 = PokemonImageTypeFrame;\nconst PokemonImageType = styled.img`\n  width: 30px;\n  height: 30px; \n`;\n_c7 = PokemonImageType;\nconst PokemonEvoGrid = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 15px;\n  width: 100px;\n  height: 50px;\n  margin: 10px;\n  border-radius: 8px;\n  background-color: #e3f5fd;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n\n  background-image: linear-gradient(60deg, #08416cff 0%, #bde8fbff 100%);\n  // gap: 15px;\n  // width: 200px;\n  // height: 200px;\n`;\n_c8 = PokemonEvoGrid;\nconst EvoLine = styled.div`\n  // display: flex;\n  // align-items: center;\n  // gap: 8px;\n  // margin-top: 8px;\n\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 15px;\n  margin: 10px;\n  border-radius: 8px;\n  background-color: #e3f5fd;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n`;\nconst PokeImgEvo = styled.img`\n  width: 30px;\n  height: 30px; \n  object-fit: contain;\n`;\n\n// const Arrow = styled.span`\n//   font-size: 30px;\n//   font-weight: bold;\n//   color: #000;\n// `;\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\nconst Spinner = styled.div`\n  border: 6px solid #f3f3f3;\n  border-top: 6px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: ${spin} 1s linear infinite;\n  margin: 50px auto;\n`;\n\n/* normaliza '#001' / '001' / 1 -> '1' */\n_c9 = Spinner;\nfunction normalizeNumber(value) {\n  if (value === undefined || value === null) return null;\n  const s = String(value);\n  const digits = s.replace(/\\D/g, \"\");\n  if (!digits) return null;\n  return String(parseInt(digits, 10));\n}\n\n/* id/number normalizado de um Pokémon do /home */\nfunction pokeKeyFromHome(p) {\n  var _normalizeNumber;\n  return (_normalizeNumber = normalizeNumber(p === null || p === void 0 ? void 0 : p.number)) !== null && _normalizeNumber !== void 0 ? _normalizeNumber : normalizeNumber(p === null || p === void 0 ? void 0 : p.id);\n}\n\n/* monta id da imagem */\nfunction imageIdForSrc(obj) {\n  if (obj == null) return \"\";\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\n  if (obj.number) {\n    const raw = String(obj.number).replace(/^#/, \"\");\n    if (raw) return raw;\n  }\n  return normalizeNumber(obj.number) || \"\";\n}\nfunction CardPokemons() {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [evolves, setEvolves] = useState([]);\n  const [pokemonstype, setPokemonsType] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([fetch(\"http://localhost:8000/home\"), fetch(\"http://localhost:8000/types\"), fetch(\"http://localhost:8000/evolves\")]);\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\n        const pokemonsData = await resPokemons.json();\n        const typesData = await resTypes.json();\n        const evolvesData = await resEvolves.json();\n        setPokemons(pokemonsData || []);\n        setPokemonsType(typesData || []);\n        setEvolves(evolvesData || []);\n      } catch (err) {\n        console.error(\"Falha no fetch:\", err.message);\n        setPokemons([]);\n        setPokemonsType([]);\n        setEvolves([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 23\n  }, this);\n  if (!(pokemons !== null && pokemons !== void 0 && pokemons.length)) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 33\n  }, this);\n  if (!(pokemonstype !== null && pokemonstype !== void 0 && pokemonstype.length)) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 37\n  }, this);\n\n  // ---- AGRUPA por cadeias evolutivas (e adiciona \"solteiros\") ----\n  const evoGroups = [];\n\n  // 1) grupos vindos do /evolve\n  for (const chain of evolves || []) {\n    var _chain$pokemon, _chain$pokemon2;\n    const fullLine = [{\n      number: chain === null || chain === void 0 ? void 0 : (_chain$pokemon = chain.pokemon) === null || _chain$pokemon === void 0 ? void 0 : _chain$pokemon.number,\n      name: chain === null || chain === void 0 ? void 0 : (_chain$pokemon2 = chain.pokemon) === null || _chain$pokemon2 === void 0 ? void 0 : _chain$pokemon2.name\n    }, ...((chain === null || chain === void 0 ? void 0 : chain.evolve) || [])].filter(x => x && x.number);\n    const group = fullLine.map(ev => pokemons.find(p => pokeKeyFromHome(p) === normalizeNumber(ev.number))).filter(Boolean);\n    if (group.length > 0) {\n      evoGroups.push(group);\n    }\n  }\n\n  // 2) adiciona pokémon que não apareceu em nenhuma cadeia (sem evolução)\n  const covered = new Set(evoGroups.flat().map(p => pokeKeyFromHome(p)).filter(Boolean));\n  const singles = pokemons.filter(p => {\n    const key = pokeKeyFromHome(p);\n    return key && !covered.has(key);\n  });\n  for (const single of singles) {\n    evoGroups.push([single]); // um grid com um único card\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: evoGroups.map((group, idx) => /*#__PURE__*/_jsxDEV(PokemonCard, {\n      children: group.map((pokemon, i) => {\n        var _pokemon$id, _pokemon$id2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(PokeNumber, {\n            children: [\"#\", (_pokemon$id2 = pokemon.id) !== null && _pokemon$id2 !== void 0 ? _pokemon$id2 : pokemon.number || \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokemonImage, {\n            src: pokemon.image || `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`,\n            alt: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokeName, {\n            style: {\n              textTransform: \"uppercase\"\n            },\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokemonImageTypeFrame, {\n            children: (Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n              src: `http://localhost:8000/types/${encodeURIComponent(type)}.png`,\n              alt: String(type)\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PokemonEvoGrid, {\n            children: (Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type]).filter(Boolean).map(type => /*#__PURE__*/_jsxDEV(PokemonImageType, {\n              src: `http://localhost:8000/types/${encodeURIComponent(type)}.png`,\n              alt: String(type)\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, (_pokemon$id = pokemon.id) !== null && _pokemon$id !== void 0 ? _pokemon$id : pokemon.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(CardPokemons, \"ZnE0jgmFQ1Y/BptpTjFefOkr0pw=\");\n_c0 = CardPokemons;\nexport default CardPokemons;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"PokemonCard\");\n$RefreshReg$(_c3, \"PokeNumber\");\n$RefreshReg$(_c4, \"PokemonImage\");\n$RefreshReg$(_c5, \"PokeName\");\n$RefreshReg$(_c6, \"PokemonImageTypeFrame\");\n$RefreshReg$(_c7, \"PokemonImageType\");\n$RefreshReg$(_c8, \"PokemonEvoGrid\");\n$RefreshReg$(_c9, \"Spinner\");\n$RefreshReg$(_c0, \"CardPokemons\");","map":{"version":3,"names":["useEffect","useState","styled","keyframes","jsxDEV","_jsxDEV","Card","div","_c","PokemonCard","_c2","PokeNumber","p","_c3","PokemonImage","img","_c4","PokeName","_c5","PokemonImageTypeFrame","_c6","PokemonImageType","_c7","PokemonEvoGrid","_c8","EvoLine","PokeImgEvo","spin","Spinner","_c9","normalizeNumber","value","undefined","s","String","digits","replace","parseInt","pokeKeyFromHome","_normalizeNumber","number","id","imageIdForSrc","obj","raw","CardPokemons","_s","pokemons","setPokemons","evolves","setEvolves","pokemonstype","setPokemonsType","loading","setLoading","fetchData","resPokemons","resTypes","resEvolves","Promise","all","fetch","ok","Error","pokemonsData","json","typesData","evolvesData","err","console","error","message","fileName","_jsxFileName","lineNumber","columnNumber","length","evoGroups","chain","_chain$pokemon","_chain$pokemon2","fullLine","pokemon","name","evolve","filter","x","group","map","ev","find","Boolean","push","covered","Set","flat","singles","key","has","single","children","idx","i","_pokemon$id","_pokemon$id2","style","display","alignItems","gap","src","image","alt","textTransform","Array","isArray","type","slice","encodeURIComponent","_c0","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/componentes/CardPokemons/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  height: auto;\r\n  margin: 0 auto; \r\n  border-radius: 10px;\r\n\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n// background-image: linear-gradient(60deg, #08416cff 0%, #bde8fbff 100%);\r\n  background: linear-gradient(-45deg, #e3f5fd, #c9e9fa, #e3f5fd);\r\n\r\n  width: 100%;\r\n  // height: auto;\r\n  // min-width: 20%;\r\n`;\r\n\r\nconst PokemonCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  // padding: 15px;\r\n  margin: 5px;\r\n  border-radius: 8px;\r\n  background: #fff;\r\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\r\n\r\n  width: auto;\r\n  // width: 80%;\r\n  // width: 200px;\r\n  // height: 200px;\r\n  // min-width: 20%;\r\n\r\n  `;\r\n\r\nconst PokeNumber = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImage = styled.img`\r\n  height: 200px;  \r\n  width: 200px;\r\n`;\r\n\r\nconst PokeName = styled.p`\r\n  font-size: 20px;\r\n  font-family: 'Montserrat','Helvetica Neue',Arial,sans-serif;\r\n  font-weight: 700;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n  color: #333;\r\n`;\r\n\r\nconst PokemonImageTypeFrame = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n  padding: 15px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst PokemonImageType = styled.img`\r\n  width: 30px;\r\n  height: 30px; \r\n`;\r\n\r\nconst PokemonEvoGrid = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 15px;\r\n  width: 100px;\r\n  height: 50px;\r\n  margin: 10px;\r\n  border-radius: 8px;\r\n  background-color: #e3f5fd;\r\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\r\n\r\n  background-image: linear-gradient(60deg, #08416cff 0%, #bde8fbff 100%);\r\n  // gap: 15px;\r\n  // width: 200px;\r\n  // height: 200px;\r\n`;\r\n\r\nconst EvoLine = styled.div`\r\n  // display: flex;\r\n  // align-items: center;\r\n  // gap: 8px;\r\n  // margin-top: 8px;\r\n\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 15px;\r\n  margin: 10px;\r\n  border-radius: 8px;\r\n  background-color: #e3f5fd;\r\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst PokeImgEvo = styled.img`\r\n  width: 30px;\r\n  height: 30px; \r\n  object-fit: contain;\r\n`;\r\n\r\n// const Arrow = styled.span`\r\n//   font-size: 30px;\r\n//   font-weight: bold;\r\n//   color: #000;\r\n// `;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  border: 6px solid #f3f3f3;\r\n  border-top: 6px solid #3498db;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 1s linear infinite;\r\n  margin: 50px auto;\r\n`;\r\n\r\n/* normaliza '#001' / '001' / 1 -> '1' */\r\nfunction normalizeNumber(value) {\r\n  if (value === undefined || value === null) return null;\r\n  const s = String(value);\r\n  const digits = s.replace(/\\D/g, \"\");\r\n  if (!digits) return null;\r\n  return String(parseInt(digits, 10));\r\n}\r\n\r\n/* id/number normalizado de um Pokémon do /home */\r\nfunction pokeKeyFromHome(p) {\r\n  return normalizeNumber(p?.number) ?? normalizeNumber(p?.id);\r\n}\r\n\r\n/* monta id da imagem */\r\nfunction imageIdForSrc(obj) {\r\n  if (obj == null) return \"\";\r\n  if (obj.id !== undefined && obj.id !== null) return String(obj.id);\r\n  if (obj.number) {\r\n    const raw = String(obj.number).replace(/^#/, \"\");\r\n    if (raw) return raw;\r\n  }\r\n  return normalizeNumber(obj.number) || \"\";\r\n}\r\n\r\nfunction CardPokemons() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [evolves, setEvolves] = useState([]);\r\n  const [pokemonstype, setPokemonsType] = useState([]);\r\n\r\n\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const [resPokemons, resTypes, resEvolves] = await Promise.all([\r\n          fetch(\"http://localhost:8000/home\"),\r\n          fetch(\"http://localhost:8000/types\"),\r\n          fetch(\"http://localhost:8000/evolves\"),\r\n        ]);\r\n\r\n        if (!resPokemons.ok) throw new Error(\"Erro ao buscar pokemons\");\r\n        if (!resTypes.ok) throw new Error(\"Erro ao buscar types\");\r\n        if (!resEvolves.ok) throw new Error(\"Erro ao buscar evoluções\");\r\n\r\n        const pokemonsData = await resPokemons.json();\r\n        const typesData = await resTypes.json();\r\n        const evolvesData = await resEvolves.json();\r\n\r\n        setPokemons(pokemonsData || []);\r\n        setPokemonsType(typesData || []);\r\n        setEvolves(evolvesData || []);\r\n      } catch (err) {\r\n        console.error(\"Falha no fetch:\", err.message);\r\n        setPokemons([]);\r\n        setPokemonsType([]);\r\n        setEvolves([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (!pokemons?.length) return <Spinner />;\r\n  if (!pokemonstype?.length) return <Spinner />;\r\n\r\n  // ---- AGRUPA por cadeias evolutivas (e adiciona \"solteiros\") ----\r\n  const evoGroups = [];\r\n\r\n  // 1) grupos vindos do /evolve\r\n  for (const chain of (evolves || [])) {\r\n    const fullLine = [\r\n      { number: chain?.pokemon?.number, name: chain?.pokemon?.name },\r\n      ...((chain?.evolve) || []),\r\n    ].filter(x => x && x.number);\r\n\r\n    const group = fullLine\r\n      .map(ev => pokemons.find(p => pokeKeyFromHome(p) === normalizeNumber(ev.number)))\r\n      .filter(Boolean);\r\n\r\n    if (group.length > 0) {\r\n      evoGroups.push(group);\r\n    }\r\n  }\r\n\r\n  // 2) adiciona pokémon que não apareceu em nenhuma cadeia (sem evolução)\r\n  const covered = new Set(\r\n    evoGroups.flat().map(p => pokeKeyFromHome(p)).filter(Boolean)\r\n  );\r\n\r\n  const singles = pokemons.filter(p => {\r\n    const key = pokeKeyFromHome(p);\r\n    return key && !covered.has(key);\r\n  });\r\n\r\n  for (const single of singles) {\r\n    evoGroups.push([single]); // um grid com um único card\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      {evoGroups.map((group, idx) => (\r\n        <PokemonCard>\r\n          {group.map((pokemon, i) => (\r\n            <div key={pokemon.id ?? pokemon.number} style={{ display: \"flex\", alignItems: \"center\", gap: 10 }}>\r\n\r\n              <PokeNumber>#{pokemon.id ?? (pokemon.number || \"\")}</PokeNumber>\r\n\r\n              <PokemonImage\r\n                src={\r\n                  pokemon.image ||\r\n                  `http://localhost:8000/home/${imageIdForSrc(pokemon)}/img`\r\n                }\r\n                alt={pokemon.name}\r\n              />\r\n\r\n              <PokeName style={{ textTransform: \"uppercase\" }}>\r\n                {pokemon.name}\r\n              </PokeName>\r\n\r\n              <PokemonImageTypeFrame>\r\n                {(Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type])\r\n                  .filter(Boolean)\r\n                  .map((type) => (\r\n                    <PokemonImageType\r\n                      key={type}\r\n                      src={`http://localhost:8000/types/${encodeURIComponent(type)}.png`}\r\n                      alt={String(type)}\r\n                    />\r\n                  ))}\r\n              </PokemonImageTypeFrame>\r\n              <PokemonEvoGrid>\r\n                {(Array.isArray(pokemon.type) ? pokemon.type.slice(0, 2) : [pokemon.type])\r\n                  .filter(Boolean)\r\n                  .map((type) => (\r\n                    <PokemonImageType\r\n                      key={type}\r\n                      src={`http://localhost:8000/types/${encodeURIComponent(type)}.png`}\r\n                      alt={String(type)}\r\n                    />\r\n                  ))}\r\n              </PokemonEvoGrid>\r\n            </div>\r\n          ))}\r\n\r\n        </PokemonCard>\r\n      ))}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardPokemons;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,IAAIC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAlBIF,IAAI;AAoBV,MAAMG,WAAW,GAAGP,MAAM,CAACK,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AAACG,GAAA,GAhBED,WAAW;AAkBjB,MAAME,UAAU,GAAGT,MAAM,CAACU,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,UAAU;AAShB,MAAMG,YAAY,GAAGZ,MAAM,CAACa,GAAG;AAC/B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,YAAY;AAKlB,MAAMG,QAAQ,GAAGf,MAAM,CAACU,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAPID,QAAQ;AASd,MAAME,qBAAqB,GAAGjB,MAAM,CAACK,GAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GATID,qBAAqB;AAW3B,MAAME,gBAAgB,GAAGnB,MAAM,CAACa,GAAG;AACnC;AACA;AACA,CAAC;AAACO,GAAA,GAHID,gBAAgB;AAKtB,MAAME,cAAc,GAAGrB,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiB,GAAA,GAjBID,cAAc;AAmBpB,MAAME,OAAO,GAAGvB,MAAM,CAACK,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMmB,UAAU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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\clone\\\\reac_dex\\\\reacdex_frontend\\\\src\\\\routes\\\\Evolves.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Evolves() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/evolves\") // rota do backend\n    .then(res => res.json()).then(data => setGroups(data)).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Evolu\\xE7\\xF5es por Grupo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Grupo \", group.group]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: group.chain.map(poke => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"#\", poke.number, \" - \", poke.name]\n        }, poke.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, group.group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Evolves, \"UbUkkKKaTwVY7PWotTfxor2xXvY=\");\n_c = Evolves;\nexport default Evolves;\n\n// import { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n\n// // === styled-components baseados no seu snippet ===\n// const PokemonEvoGrid = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   gap: 20px;\n//   flex-wrap: wrap;\n//   margin: 20px 0;\n// `;\n\n// const EvolveCard = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   border-radius: 10px;\n//   padding: 10px;\n//   background: #f8f9fa;\n//   box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n// `;\n\n// const PokeImgEvo = styled.img`\n//   width: 120px;\n//   height: 120px;\n//   object-fit: contain;\n// `;\n\n// // função utilitária p/ construir src da imagem\n// const imageIdForSrc = (pokemon) => {\n//   return pokemon.id ?? pokemon.number;\n// };\n\n// function EvolutionsPage() {\n//   const [groups, setGroups] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:8000/evolutions\") // rota backend\n//       .then((res) => res.json())\n//       .then((data) => setGroups(data))\n//       .catch((err) => console.error(err));\n//   }, []);\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h1 style={{ textAlign: \"center\" }}>Evoluções por Grupo</h1>\n\n//       {groups.map((group) => (\n//         <div key={group.group}>\n//           <h2 style={{ textAlign: \"center\" }}>Grupo {group.group}</h2>\n\n//           {group.chain && (\n//             <PokemonEvoGrid>\n//               {group.chain.map((ev) => (\n//                 <EvolveCard key={ev.id ?? ev.number}>\n//                   <PokeImgEvo\n//                     src={\n//                       ev.image ||\n//                       `http://localhost:8000/home/${imageIdForSrc(ev)}/img`\n//                     }\n//                     alt={ev.name}\n//                   />\n//                 </EvolveCard>\n//               ))}\n//             </PokemonEvoGrid>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default EvolutionsPage;\nvar _c;\n$RefreshReg$(_c, \"Evolves\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Evolves","_s","groups","setGroups","fetch","then","res","json","data","catch","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","marginBottom","chain","poke","number","name","_c","$RefreshReg$"],"sources":["D:/clone/reac_dex/reacdex_frontend/src/routes/Evolves.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction Evolves() {\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/evolves\") // rota do backend\r\n      .then((res) => res.json())\r\n      .then((data) => setGroups(data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Evoluções por Grupo</h1>\r\n\r\n      {groups.map((group) => (\r\n        <div key={group.group} style={{ marginBottom: \"20px\" }}>\r\n          <h2>Grupo {group.group}</h2>\r\n          <ul>\r\n            {group.chain.map((poke) => (\r\n              <li key={poke.number}>\r\n                #{poke.number} - {poke.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Evolves;\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\n// // === styled-components baseados no seu snippet ===\r\n// const PokemonEvoGrid = styled.div`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   gap: 20px;\r\n//   flex-wrap: wrap;\r\n//   margin: 20px 0;\r\n// `;\r\n\r\n// const EvolveCard = styled.div`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   border-radius: 10px;\r\n//   padding: 10px;\r\n//   background: #f8f9fa;\r\n//   box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n// `;\r\n\r\n// const PokeImgEvo = styled.img`\r\n//   width: 120px;\r\n//   height: 120px;\r\n//   object-fit: contain;\r\n// `;\r\n\r\n// // função utilitária p/ construir src da imagem\r\n// const imageIdForSrc = (pokemon) => {\r\n//   return pokemon.id ?? pokemon.number;\r\n// };\r\n\r\n// function EvolutionsPage() {\r\n//   const [groups, setGroups] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:8000/evolutions\") // rota backend\r\n//       .then((res) => res.json())\r\n//       .then((data) => setGroups(data))\r\n//       .catch((err) => console.error(err));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <h1 style={{ textAlign: \"center\" }}>Evoluções por Grupo</h1>\r\n\r\n//       {groups.map((group) => (\r\n//         <div key={group.group}>\r\n//           <h2 style={{ textAlign: \"center\" }}>Grupo {group.group}</h2>\r\n\r\n//           {group.chain && (\r\n//             <PokemonEvoGrid>\r\n//               {group.chain.map((ev) => (\r\n//                 <EvolveCard key={ev.id ?? ev.number}>\r\n//                   <PokeImgEvo\r\n//                     src={\r\n//                       ev.image ||\r\n//                       `http://localhost:8000/home/${imageIdForSrc(ev)}/img`\r\n//                     }\r\n//                     alt={ev.name}\r\n//                   />\r\n//                 </EvolveCard>\r\n//               ))}\r\n//             </PokemonEvoGrid>\r\n//           )}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default EvolutionsPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAAA,CACpCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BhB,OAAA;MAAAgB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE3BjB,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBAChBtB,OAAA;MAAuBc,KAAK,EAAE;QAAES,YAAY,EAAE;MAAO,CAAE;MAAAP,QAAA,gBACrDhB,OAAA;QAAAgB,QAAA,GAAI,QAAM,EAACM,KAAK,CAACA,KAAK;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5BpB,OAAA;QAAAgB,QAAA,EACGM,KAAK,CAACE,KAAK,CAACH,GAAG,CAAEI,IAAI,iBACpBzB,OAAA;UAAAgB,QAAA,GAAsB,GACnB,EAACS,IAAI,CAACC,MAAM,EAAC,KAAG,EAACD,IAAI,CAACE,IAAI;QAAA,GADpBF,IAAI,CAACC,MAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GARGE,KAAK,CAACA,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAShB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CA5BQD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AA8BhB,eAAeA,OAAO;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}